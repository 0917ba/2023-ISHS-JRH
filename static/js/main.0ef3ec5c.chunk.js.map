{"version":3,"sources":["components/Global/stylesheets/Video.module.css","components/Global/stylesheets/Canvas.module.css","components/Global/Button.js","routes/Home.js","js/tts.js","js/nutrientsHandle.js","components/Global/Video.js","components/Global/Canvas.js","routes/Nutrients/Nutrients.js","routes/Nutrients/NuResult.js","routes/Expiration/Expiration.js","routes/Expiration/ExResult.js","js/stt.js","js/sttHandle.js","routes/Restaurant/Restaurant.js","routes/Restaurant/ReResult.js","routes/Help.js","App.js","index.js"],"names":["module","exports","Button","_ref","text","onClick","_jsx","children","Home","navigate","useNavigate","navigateTo","path","console","log","_jsxs","audio","Audio","canAudioPause","isAudioEnded","textToSpeech","_x","_textToSpeech","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","notImportant","audioData","otherparam","fetchData","res","_args","wrap","_context","prev","next","length","undefined","input","voice","languageCode","name","ssmlGender","audioConfig","audioEncoding","headers","body","JSON","stringify","method","addEventListener","fetch","sent","json","pause","src","concat","audioContent","play","t0","abrupt","Promise","resolve","loop","setInterval","clearInterval","stop","getDevice","ua","navigator","userAgent","toLowerCase","indexOf","setNutrients","candidate","calories","NUTR_CONT1","carbohydrate","NUTR_CONT2","protein","NUTR_CONT3","fat","NUTR_CONT4","sugar","NUTR_CONT5","sodium","NUTR_CONT6","cholesterol","NUTR_CONT7","saturatedFat","NUTR_CONT8","transFat","NUTR_CONT9","result","nutrients","DESC_KOR","maker","MAKER_NAME","key","Video","videoRef","useEffect","device","mediaDevices","getUserMedia","video","width","height","facingMode","exact","getWebcam","then","stream","current","srcObject","ref","className","styles","autoPlay","Canvas","forwardRef","props","canvas","Nutrients","_useState","useState","_useState2","_slicedToArray","productNum","setProductNum","_useState3","_useState4","isNumDetected","setIsNumDetected","_useState5","_useState6","resultArr","setResultArr","isFirstLoaded","useRef","search","canvasRef","getProductName","url","response","I1250","total_count","row","PRDLST_NM","I1310","Error","getNutrients","_ref2","_callee2","productName","newName","_context2","replaceAll","I2790","_x2","window","speechSynthesis","getVoices","id","ctx","getContext","drawImage","err","drawToCanvas","image","toDataURL","replace","formData","FormData","append","data","_toConsumableArray","sendImage","_getMode","arr","obj","forEach","resNum","repeatCnt","getMode","state","resNutrients","catch","NuResult","useLocation","nuts","Expiration","expiration","setExpiration","isDateDetected","setIsDateDetected","resDate","ExResult","resText","setResText","location","ttsText","sttResult","isSttFinished","speechToText","_speechToText","_callee3","interval","b64AudioToString","recorder","_args3","_context3","audioBase64","results","config","encoding","audio_channel_count","content","alternatives","transcript","MediaRecorder","event","reader","FileReader","readAsDataURL","onloadend","base64String","start","setTimeout","restaurantsList","Set","positiveResponse","Restaurant","params","userRestaurant","userMenu","fetchNutrients","selectProduct","rawNutrients","_ref3","isCorrectRes","_iterator","_step","nutrientsData","userResponse","_createForOfIteratorHelper","s","n","done","value","has","e","f","finish","init","_ref4","_callee4","_context4","ReResult","Help","App","Router","Routes","Route","element","process","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.0ef3ec5c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"video\":\"Video_video__1byDN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"Canvas_canvas__3J25t\"};","import PropTypes from \"prop-types\";\r\n\r\nfunction Button({ text, onClick }) {\r\n  return <button onClick={onClick}>{text}</button>;\r\n}\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import { useNavigate } from \"react-router-dom\";\r\nimport Button from \"../components/Global/Button\";\r\n//import { getSpeech } from \"../js/tts\";\r\nimport { useEffect } from \"react\";\r\n\r\nfunction Home() {\r\n  const navigate = useNavigate();\r\n  const navigateTo = (path) => {\r\n    navigate(path);\r\n    console.log(\"Redirecting...\");\r\n  };\r\n\r\n  //useEffect(() => getSpeech(\"Hello!\"), []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>앱 이름</h1>\r\n      <Button text=\"영양성분\" onClick={() => navigateTo(\"/nutrients\")} />\r\n      <Button text=\"유통기한\" onClick={() => navigateTo(\"/expiration\")} />\r\n      <Button text=\"음식점\" onClick={() => navigateTo(\"/restaurant\")} />\r\n      <Button text=\"도움말\" onClick={() => navigateTo(\"/help\")} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","function getSpeech(text) {\r\n  const lang = \"ko-KR\";\r\n  const utterThis = new SpeechSynthesisUtterance(text);\r\n\r\n  utterThis.lang = lang;\r\n  utterThis.rate = getSpeed();\r\n  window.speechSynthesis.speak(utterThis);\r\n}\r\n\r\nconst audio = new Audio();\r\nlet canAudioPause = false;\r\nlet isAudioEnded = false;\r\n\r\nasync function textToSpeech(text, notImportant = false) {\r\n  const url =\r\n    \"https://texttospeech.googleapis.com/v1/text:synthesize?key=AIzaSyCxnSFvcQd6a17xfB4nDwDafJH_juHSNA0\";\r\n  const audioData = {\r\n    input: {\r\n      text: text,\r\n    },\r\n    voice: {\r\n      languageCode: \"ko-KR\",\r\n      name: \"ko-KR-Neural2-c\",\r\n      ssmlGender: \"MALE\",\r\n    },\r\n    audioConfig: {\r\n      audioEncoding: \"MP3\",\r\n    },\r\n  };\r\n  const otherparam = {\r\n    headers: {\r\n      \"content-type\": \"application/json; charset=UTF-8\",\r\n    },\r\n    body: JSON.stringify(audioData),\r\n    method: \"POST\",\r\n  };\r\n\r\n  audio.addEventListener(\"ended\", () => {\r\n    console.log(\"audio ended!\");\r\n    isAudioEnded = true;\r\n  });\r\n\r\n  // 사운드 생성\r\n  try {\r\n    const fetchData = await fetch(url, otherparam);\r\n    const res = await fetchData.json();\r\n    console.log(canAudioPause);\r\n\r\n    if (canAudioPause) audio.pause();\r\n    audio.src = `data:audio/mp3;base64,${res.audioContent}`;\r\n    canAudioPause = notImportant;\r\n    audio.play();\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n\r\n  return new Promise((resolve) => {\r\n    let loop = setInterval(() => {\r\n      if (isAudioEnded) {\r\n        clearInterval(loop);\r\n        isAudioEnded = false;\r\n        resolve();\r\n      }\r\n    }, 100);\r\n  });\r\n}\r\n\r\nfunction stopSpeech() {\r\n  window.speechSynthesis.cancel();\r\n}\r\n\r\nfunction getDevice() {\r\n  let ua = navigator.userAgent.toLowerCase();\r\n  if (ua.indexOf(\"android\") > -1) {\r\n    return \"android\";\r\n  } else if (\r\n    ua.indexOf(\"iphone\") > -1 ||\r\n    ua.indexOf(\"ipad\") > -1 ||\r\n    ua.indexOf(\"ipod\") > -1\r\n  ) {\r\n    return \"ios\";\r\n  } else {\r\n    return \"computer\";\r\n  }\r\n}\r\n\r\nfunction getSpeed() {\r\n  let device = getDevice();\r\n  if (device === \"ios\") return 1.2;\r\n  else if (device === \"android\") return 1.5;\r\n  else return 2;\r\n}\r\n\r\nexport { getSpeech, stopSpeech, getDevice, textToSpeech };\r\n","/**\r\n *  function that returns sanitized nutrients data\r\n *  @param {object} candidate json.I2790.row[i]\r\n *  @return object{nuts: {name, maker, calories, nutrients}}\r\n */\r\nfunction setNutrients(candidate) {\r\n  if (candidate !== \"\") {\r\n    //set nutrients\r\n    const calories = candidate.NUTR_CONT1;\r\n    const carbohydrate = candidate.NUTR_CONT2;\r\n    const protein = candidate.NUTR_CONT3;\r\n    const fat = candidate.NUTR_CONT4;\r\n    const sugar = candidate.NUTR_CONT5;\r\n    const sodium = candidate.NUTR_CONT6;\r\n    const cholesterol = candidate.NUTR_CONT7;\r\n    const saturatedFat = candidate.NUTR_CONT8;\r\n    const transFat = candidate.NUTR_CONT9;\r\n\r\n    //output Object\r\n    const result = {};\r\n    const nutrients = {\r\n      name: candidate.DESC_KOR,\r\n      maker: candidate.MAKER_NAME,\r\n      calories: calories,\r\n      nutrients: {\r\n        carbohydrate: carbohydrate,\r\n        protein: protein,\r\n        fat: fat,\r\n        sugar: sugar,\r\n        sodium: sodium,\r\n        cholesterol: cholesterol,\r\n        saturatedFat: saturatedFat,\r\n        transFat: transFat,\r\n      },\r\n    };\r\n\r\n    //set zero default value\r\n    for (let key in nutrients.nutrients) {\r\n      if (nutrients.nutrients[key] === \"\") {\r\n        nutrients.nutrients[key] = \"0\";\r\n      }\r\n    }\r\n\r\n    //return\r\n    result[\"nuts\"] = nutrients;\r\n    return result;\r\n  }\r\n}\r\n\r\nexport { setNutrients };\r\n","import { useEffect } from \"react\";\r\nimport { getDevice } from \"../../js/tts\";\r\nimport styles from \"./stylesheets/Video.module.css\";\r\n\r\nfunction Video({ videoRef }) {\r\n  const getWebcam = () => {\r\n    const device = getDevice();\r\n    if (device === \"android\" || device === \"ios\") {\r\n      return navigator.mediaDevices.getUserMedia({\r\n        video: {\r\n          width: 300,\r\n          height: 400,\r\n          facingMode: { exact: \"environment\" },\r\n        },\r\n        audio: false,\r\n      });\r\n    } else {\r\n      return navigator.mediaDevices.getUserMedia({\r\n        video: {\r\n          width: 300,\r\n          height: 400,\r\n        },\r\n        audio: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getWebcam().then((stream) => {\r\n      videoRef.current.srcObject = stream;\r\n    });\r\n  }, []);\r\n\r\n  return <video ref={videoRef} className={styles.video} autoPlay />;\r\n}\r\n\r\nexport default Video;\r\n","import { forwardRef } from \"react\";\r\nimport styles from \"./stylesheets/Canvas.module.css\";\r\n\r\nconst Canvas = forwardRef((props, ref) => {\r\n  return (\r\n    <canvas\r\n      ref={ref}\r\n      className={styles.canvas}\r\n      width=\"720\"\r\n      height=\"960\"\r\n    ></canvas>\r\n  );\r\n});\r\n\r\nexport default Canvas;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { textToSpeech } from \"./../../js/tts\";\r\nimport { setNutrients } from \"../../js/nutrientsHandle\";\r\nimport Video from \"../../components/Global/Video\";\r\nimport Canvas from \"../../components/Global/Canvas\";\r\n\r\nfunction Nutrients() {\r\n  const [productNum, setProductNum] = useState(\"\");\r\n  const [isNumDetected, setIsNumDetected] = useState(false);\r\n  const [resultArr, setResultArr] = useState([]);\r\n\r\n  const isFirstLoaded = useRef(true);\r\n  const search = useRef(true);\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  const navigate = useNavigate();\r\n  const navigateTo = (path, params) => {\r\n    navigate(path, { state: params });\r\n    console.log(\"Redirecting...\");\r\n  };\r\n\r\n  const drawToCanvas = () => {\r\n    try {\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n      if (ctx !== null && videoRef.current) {\r\n        ctx.drawImage(videoRef.current, 0, 0, 300, 400);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const sendImage = () => {\r\n    try {\r\n      if (canvasRef.current) {\r\n        const image = canvasRef.current\r\n          .toDataURL()\r\n          .replace(\"data:image/png;base64,\", \"\");\r\n        let formData = new FormData();\r\n        formData.append(\"imageInfo\", image);\r\n\r\n        fetch(\"https://0917ba2.pythonanywhere.com/pummok\", {\r\n          method: \"POST\",\r\n          body: formData,\r\n        })\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            //console.log(data.result);\r\n            if (data.result !== \"not found\" && !isNumDetected) {\r\n              setIsNumDetected(true);\r\n            }\r\n            setResultArr((current) => [...current, data.result]);\r\n          });\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n\r\n    //console.log(image);\r\n  };\r\n\r\n  const getProductName = async (productNum) => {\r\n    //try: 일반 식품\r\n    let url = `http://openapi.foodsafetykorea.go.kr/api/8afc960ac75f4a4e9426/I1250/json/1/1/PRDLST_REPORT_NO=${productNum}`;\r\n    let response = await fetch(url);\r\n    let json = await response.json();\r\n    if (json.I1250.total_count !== \"0\") {\r\n      console.log(json);\r\n      return json.I1250.row[0].PRDLST_NM;\r\n    }\r\n    console.log(\"not found first\");\r\n\r\n    //try: 축산물\r\n    url = `http://openapi.foodsafetykorea.go.kr/api/8afc960ac75f4a4e9426/I1310/json/1/1/PRDLST_REPORT_NO=${productNum}`;\r\n    response = await fetch(url);\r\n    json = await response.json();\r\n    if (json.I1310.total_count !== \"0\") {\r\n      console.log(json);\r\n      return json.I1310.row[0].PRDLST_NM;\r\n    }\r\n\r\n    //not found\r\n    throw new Error(\"productNumber not found\");\r\n  };\r\n\r\n  const getNutrients = async (productName) => {\r\n    //space to underbar\r\n    const newName = productName.replaceAll(\" \", \"_\");\r\n\r\n    //fetch nutrients by productName\r\n    const url = `https://openapi.foodsafetykorea.go.kr/api/8afc960ac75f4a4e9426/I2790/json/1/1/DESC_KOR=${newName}`;\r\n    const response = await fetch(url);\r\n    const json = await response.json();\r\n\r\n    //throw Error\r\n    if (json.I2790.total_count === \"0\") {\r\n      throw new Error(\"품목보고번호에 일치하는 제품이 없습니다.\");\r\n    }\r\n\r\n    console.log(json);\r\n    return setNutrients(json.I2790.row[0]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.speechSynthesis.getVoices();\r\n    textToSpeech(\"품목보고번호 탐색을 시작합니다.\", true);\r\n    const id = setInterval(() => {\r\n      if (search.current) {\r\n        drawToCanvas();\r\n        sendImage();\r\n      }\r\n    }, 350);\r\n    return () => clearInterval(id);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isNumDetected) {\r\n      console.log(\"number detected!\");\r\n      textToSpeech(\"품목보고번호가 감지되었습니다.\", false);\r\n    }\r\n  }, [isNumDetected]);\r\n\r\n  useEffect(() => {\r\n    if (resultArr.length >= 10) {\r\n      search.current = false;\r\n      let { res, repeatCnt } = getMode(resultArr);\r\n      if (res === \"not found\") {\r\n        console.log(\"failed.. begin to search\");\r\n        textToSpeech(\"탐색중.\", true);\r\n        search.current = true;\r\n      } else {\r\n        console.log(\"success!\");\r\n        console.log(`found result is ${res}`);\r\n        setProductNum(res);\r\n      }\r\n      //init\r\n      setIsNumDetected(false);\r\n      setResultArr([]);\r\n    }\r\n  }, [resultArr]);\r\n\r\n  useEffect(() => {\r\n    //console.log(isFirstLoaded.current);\r\n    if (!isFirstLoaded.current && productNum !== \"\") {\r\n      getProductName(productNum)\r\n        .then((productName) => getNutrients(productName))\r\n        .then((nutrients) => {\r\n          console.log(nutrients);\r\n          setProductNum(\"\");\r\n          navigateTo(\"/nutrients/result\", { resNutrients: nutrients });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          console.log(\"product not found. begin to search.\");\r\n          textToSpeech(\"일치하는 상품이 없습니다. 재탐색합니다.\", false);\r\n          setProductNum(\"\");\r\n          search.current = true;\r\n        });\r\n    } else {\r\n      isFirstLoaded.current = false;\r\n    }\r\n  }, [productNum]);\r\n\r\n  return (\r\n    <div>\r\n      <Video videoRef={videoRef} />\r\n      <Canvas ref={canvasRef} />\r\n    </div>\r\n  );\r\n}\r\n\r\n//get mode value of Array: arr\r\nfunction getMode(arr) {\r\n  let obj = {};\r\n  arr.forEach((res) => {\r\n    obj[res] = obj[res] === undefined ? 1 : obj[res] + 1;\r\n  });\r\n  //console.log(obj);\r\n  let res = \"\";\r\n  let resNum = 0;\r\n  for (let key in obj) {\r\n    //console.log(key);\r\n    if (resNum < obj[key]) {\r\n      res = key;\r\n      resNum = obj[key];\r\n    }\r\n  }\r\n  return { res: res, repeatCnt: resNum };\r\n}\r\n\r\nexport default Nutrients;\r\n","import { useLocation } from \"react-router-dom\";\r\nimport { textToSpeech } from \"./../../js/tts\";\r\nimport { useEffect } from \"react\";\r\n\r\nfunction NuResult() {\r\n  const location = useLocation();\r\n  const result = location.state.resNutrients.nuts;\r\n  const nutrients = result.nutrients;\r\n\r\n  useEffect(() => {\r\n    textToSpeech(\"찾았습니다.\");\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>상품명: {result.name}</h1>\r\n      <ul>\r\n        <li>칼로리: {result.calories}kcal</li>\r\n        <li>탄수화물: {nutrients.carbohydrate}g</li>\r\n        <li>단백질: {nutrients.protein}g</li>\r\n        <li>지방: {nutrients.fat}g</li>\r\n        <li>당류: {nutrients.sugar}g</li>\r\n        <li>나트륨: {nutrients.sodium}mg</li>\r\n        <li>콜레스테롤: {nutrients.cholesterol}mg</li>\r\n        <li>포화지방: {nutrients.saturatedFat}g</li>\r\n        <li>트랜스지방: {nutrients.transFat}g</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NuResult;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { textToSpeech } from \"../../js/tts\";\r\nimport Video from \"../../components/Global/Video\";\r\nimport Canvas from \"../../components/Global/Canvas\";\r\n\r\nfunction Expiration() {\r\n  const [expiration, setExpiration] = useState(\"\");\r\n  const [isDateDetected, setIsDateDetected] = useState(false);\r\n  const [resultArr, setResultArr] = useState([]);\r\n\r\n  const isFirstLoaded = useRef(true);\r\n  const search = useRef(true);\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  const navigate = useNavigate();\r\n  const navigateTo = (path, params) => {\r\n    navigate(path, { state: params });\r\n    console.log(\"Redirecting...\");\r\n  };\r\n\r\n  const drawToCanvas = () => {\r\n    try {\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n      if (ctx !== null && videoRef.current) {\r\n        ctx.drawImage(videoRef.current, 0, 0, 300, 400);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const sendImage = () => {\r\n    try {\r\n      if (canvasRef.current) {\r\n        const image = canvasRef.current\r\n          .toDataURL()\r\n          .replace(\"data:image/png;base64,\", \"\");\r\n        let formData = new FormData();\r\n        formData.append(\"imageInfo\", image);\r\n\r\n        fetch(\"https://0917ba2.pythonanywhere.com/utong\", {\r\n          method: \"POST\",\r\n          body: formData,\r\n        })\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            //console.log(data.result);\r\n            if (data.result !== \"not found\" && !isDateDetected) {\r\n              setIsDateDetected(true);\r\n            }\r\n            setResultArr((current) => [...current, data.result]);\r\n          });\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n\r\n    //console.log(image);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.speechSynthesis.getVoices();\r\n    //getSpeech(\"유통기한 탐색을 시작합니다.\");\r\n    textToSpeech(\"유통기한 탐색을 시작합니다.\", true);\r\n    const id = setInterval(() => {\r\n      drawToCanvas();\r\n      sendImage();\r\n    }, 250);\r\n    return () => clearInterval(id);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isDateDetected) {\r\n      console.log(\"date detected!\");\r\n      textToSpeech(\"유통기한이 감지되었습니다.\", false);\r\n    }\r\n  }, [isDateDetected]);\r\n\r\n  useEffect(() => {\r\n    if (resultArr.length >= 10) {\r\n      search.current = false;\r\n      let { res, repeatCnt } = getMode(resultArr);\r\n      if (res === \"not found\") {\r\n        console.log(\"failed.. begin to search\");\r\n        textToSpeech(\"탐색중.\", true);\r\n        //getSpeech(\"유통기한을 찾지 못했습니다. 재검색합니다.\");\r\n        search.current = true;\r\n      } else {\r\n        console.log(\"success!\");\r\n        console.log(`found result is ${res}`);\r\n        setExpiration(res);\r\n      }\r\n\r\n      //init\r\n      setIsDateDetected(false);\r\n      setResultArr([]);\r\n    }\r\n  }, [resultArr]);\r\n\r\n  useEffect(() => {\r\n    //console.log(isFirstLoaded.current);\r\n    if (!isFirstLoaded.current && expiration !== \"\") {\r\n      console.log(`Expiration Date is ${expiration}`);\r\n      navigateTo(\"/expiration/result\", { resDate: expiration });\r\n    } else {\r\n      isFirstLoaded.current = false;\r\n    }\r\n  }, [expiration]);\r\n\r\n  return (\r\n    <div>\r\n      <Video videoRef={videoRef} />\r\n      <Canvas ref={canvasRef} />\r\n    </div>\r\n  );\r\n}\r\n\r\n//get mode value of Array: arr\r\nfunction getMode(arr) {\r\n  let obj = {};\r\n  arr.forEach((res) => {\r\n    obj[res] = obj[res] === undefined ? 1 : obj[res] + 1;\r\n  });\r\n  console.log(obj);\r\n  let res = \"\";\r\n  let resNum = 0;\r\n  for (let key in obj) {\r\n    //console.log(key);\r\n    if (resNum < obj[key]) {\r\n      res = key;\r\n      resNum = obj[key];\r\n    }\r\n  }\r\n  return { res: res, repeatCnt: resNum };\r\n}\r\n\r\nexport default Expiration;\r\n","import { useLocation } from \"react-router-dom\";\r\nimport { textToSpeech } from \"./../../js/tts\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction ExResult() {\r\n  const [resText, setResText] = useState(\"\");\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    let resDate = location.state.resDate;\r\n    resDate = resDate.replace(\"-\", \"년 \");\r\n    resDate = resDate.replace(\"-\", \"월 \");\r\n    resDate += \"일\";\r\n    console.log(resDate);\r\n    const ttsText = `상품의 유통기한은 ${resDate} 입니다.`;\r\n    setResText(ttsText);\r\n    textToSpeech(ttsText, false);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>{resText}</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExResult;\r\n","//final return value\r\nlet sttResult = \"\";\r\nlet isSttFinished = false;\r\n\r\nasync function speechToText(interval = 3000) {\r\n  //audioBase64: plain b64 string\r\n  const b64AudioToString = async (audioBase64) => {\r\n    const url =\r\n      \"https://speech.googleapis.com/v1/speech:recognize?key=AIzaSyCxnSFvcQd6a17xfB4nDwDafJH_juHSNA0\";\r\n\r\n    // POST data\r\n    const data = {\r\n      config: {\r\n        encoding: \"WEBM_OPUS\",\r\n        languageCode: \"ko-KR\",\r\n        audio_channel_count: 1,\r\n      },\r\n      audio: {\r\n        content: audioBase64,\r\n      },\r\n    };\r\n\r\n    // POST request\r\n    const response = await fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    const results = await response.json();\r\n\r\n    //return text\r\n    try {\r\n      return results.results[0].alternatives[0].transcript;\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  // input stream\r\n  const stream = await navigator.mediaDevices.getUserMedia({\r\n    audio: true,\r\n    video: false,\r\n  });\r\n\r\n  //input recorder\r\n  const recorder = new MediaRecorder(stream);\r\n\r\n  recorder.addEventListener(\"dataavailable\", (event) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(event.data);\r\n    reader.onloadend = async () => {\r\n      const base64String = reader.result.replace(\r\n        \"data:audio/webm;codecs=opus;base64,\",\r\n        \"\"\r\n      );\r\n      sttResult = await b64AudioToString(base64String);\r\n      isSttFinished = true;\r\n    };\r\n  });\r\n\r\n  //start & stop recording\r\n  return new Promise((resolve) => {\r\n    console.log(\"recording start!\");\r\n    recorder.start();\r\n    setTimeout(() => {\r\n      recorder.stop();\r\n      console.log(\"recording stop!\");\r\n      let loop = setInterval(() => {\r\n        if (isSttFinished) {\r\n          clearInterval(loop);\r\n          isSttFinished = false;\r\n          resolve(sttResult);\r\n        }\r\n      }, 100);\r\n    }, interval);\r\n  });\r\n}\r\n\r\nexport { speechToText };\r\n","const restaurantsList = new Set([\r\n  \"도미노피자\",\r\n  \"피자헛\",\r\n  \"미스터피자\",\r\n  \"피자에땅\",\r\n  \"피자알볼로\",\r\n  \"알볼로\",\r\n  \"뽕뜨락피자\",\r\n  \"카페띠아모\",\r\n  \"못난이꽈배기\",\r\n  \"코코호도\",\r\n  \"크리스피크림도넛\",\r\n  \"크리스피크림\",\r\n  \"요거프레소\",\r\n  \"카페베네\",\r\n  \"탐앤탐스\",\r\n  \"커피마마\",\r\n  \"투썸플레이스\",\r\n  \"파스쿠찌\",\r\n  \"7번가피자\",\r\n  \"칠번가피자\",\r\n  \"파파존스\",\r\n  \"롯데리아\",\r\n  \"토프레소\",\r\n  \"배스킨라빈스\",\r\n  \"피자스쿨\",\r\n  \"공차\",\r\n  \"스타벅스\",\r\n  \"앤티앤스프레즐\",\r\n  \"앤티앤스\",\r\n  \"카페 봄봄\",\r\n  \"이디야커피\",\r\n  \"이디야\",\r\n  \"목우촌참피자\",\r\n  \"난타5000\",\r\n  \"난타오천\",\r\n  \"반올림피자샵\",\r\n  \"반올림피자\",\r\n  \"빽다방\",\r\n  \"커피빈\",\r\n  \"앤젤리너스\",\r\n  \"앤젤리너스커피\",\r\n  \"드롭탑\",\r\n  \"드롭탑커피\",\r\n  \"할리스커피\",\r\n  \"할리스\",\r\n  \"커피베이\",\r\n  \"XOXO핫도그&커피\",\r\n  \"파리바게뜨\",\r\n  \"파리바게트\",\r\n  \"피자마루\",\r\n  \"오구피자\",\r\n  \"서브웨이\",\r\n  \"맥도날드\",\r\n  \"버거킹\",\r\n  \"맘스터치\",\r\n  \"KFC\",\r\n  \"피자나라치킨공주\",\r\n  \"던킨도너츠\",\r\n  \"뚜레쥬르\",\r\n  \"메가커피\",\r\n  \"커피에 반하다\",\r\n  \"삼삼한밥상\",\r\n  \"고피자\",\r\n  \"피자헤븐\",\r\n  \"눈꽃치즈떡볶이\",\r\n  \"스트릿츄러스\",\r\n  \"꾸브라꼬 숯불두마리 치킨\",\r\n  \"꾸브라꼬\",\r\n  \"쿡솜씨\",\r\n  \"프레시지\",\r\n]);\r\n\r\nconst positiveResponse = new Set([\r\n  \"네\",\r\n  \"넵\",\r\n  \"옙\",\r\n  \"예\",\r\n  \"맞아요\",\r\n  \"맞습니다\",\r\n  \"맞아\",\r\n  \"그래\",\r\n  \"응\",\r\n  \"어\",\r\n  \"맞을걸요\",\r\n  \"맞음\",\r\n]);\r\n\r\nconst negativeResponse = new Set([\r\n  \"아니\",\r\n  \"아니요\",\r\n  \"아니오\",\r\n  \"아닙니다\",\r\n  \"아닐걸요\",\r\n  \"아닌데\",\r\n  \"아님\",\r\n  \"아니에요\",\r\n  \"아냐\",\r\n  \"아뇨\",\r\n  \"아녀\",\r\n]);\r\n\r\nexport { restaurantsList, positiveResponse, negativeResponse };\r\n","import { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { textToSpeech } from \"../../js/tts\";\r\nimport { speechToText } from \"../../js/stt\";\r\nimport { setNutrients } from \"../../js/nutrientsHandle\";\r\nimport { restaurantsList, positiveResponse } from \"../../js/sttHandle\";\r\n\r\nfunction Restaurant() {\r\n  const navigate = useNavigate();\r\n  const navigateTo = (path, params) => {\r\n    navigate(path, { state: params });\r\n    console.log(\"Redirecting...\");\r\n  };\r\n\r\n  let userRestaurant = \"\";\r\n  let userMenu = \"\";\r\n\r\n  const getNutrients = async () => {\r\n    const fetchNutrients = async () => {\r\n      const url = `https://openapi.foodsafetykorea.go.kr/api/8afc960ac75f4a4e9426/I2790/json/1/100/DESC_KOR=${userMenu}&MAKER_NAME=${userRestaurant}`;\r\n      const response = await fetch(url);\r\n      const json = await response.json();\r\n\r\n      if (json.I2790.total_count === \"0\") {\r\n        await textToSpeech(\"찾으시는 제품이 없습니다...ㅠㅠ\");\r\n        return null;\r\n      } else {\r\n        return json;\r\n      }\r\n    };\r\n\r\n    const selectProduct = async () => {\r\n      let isCorrectRes = false;\r\n      let nutrients = null;\r\n      for (const nutrientsData of rawNutrients.I2790.row) {\r\n        console.log(`찾으시는 제품이 ${nutrientsData.DESC_KOR} 인가요?`);\r\n        await textToSpeech(`찾으시는 제품이 ${nutrientsData.DESC_KOR} 인가요?`);\r\n\r\n        const userResponse = await speechToText(2500);\r\n        if (positiveResponse.has(userResponse)) {\r\n          nutrients = setNutrients(nutrientsData);\r\n          console.log(nutrients);\r\n          isCorrectRes = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (isCorrectRes) {\r\n        navigateTo(\"/restaurant/result\", { resNutrients: nutrients });\r\n      } else {\r\n        console.log(\"찾으시는 제품이 없습니다...ㅠㅠ\");\r\n        await textToSpeech(\"찾으시는 제품이 없습니다...ㅠㅠ\");\r\n        navigateTo(\"/2023-ISHS-JRH\");\r\n      }\r\n    };\r\n\r\n    const rawNutrients = await fetchNutrients();\r\n    if (rawNutrients !== null) selectProduct();\r\n    else navigateTo(\"/2023-ISHS-JRH\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      console.log(\"init started!\");\r\n\r\n      await textToSpeech(\"방문하신 매장의 이름을 말씀해주세요.\");\r\n      userRestaurant = await speechToText(3000);\r\n\r\n      if (restaurantsList.has(userRestaurant)) {\r\n        await textToSpeech(\"주문하실 메뉴의 이름을 말씀해주세요.\");\r\n        userMenu = await speechToText(3000);\r\n        getNutrients();\r\n      } else {\r\n        await textToSpeech(\"찾으시는 매장이 존재하지 않습니다..ㅠㅠ\");\r\n        navigateTo(\"/2023-ISHS-JRH\");\r\n      }\r\n    };\r\n\r\n    init();\r\n  }, []);\r\n\r\n  return <div></div>;\r\n}\r\n\r\nexport default Restaurant;\r\n","import { useLocation } from \"react-router-dom\";\r\nimport { textToSpeech } from \"./../../js/tts\";\r\nimport { useEffect } from \"react\";\r\n\r\nfunction ReResult() {\r\n  const location = useLocation();\r\n  const result = location.state.resNutrients.nuts;\r\n  const nutrients = result.nutrients;\r\n\r\n  useEffect(() => {\r\n    textToSpeech(\"찾았습니다.\");\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>상품명: {result.name}</h1>\r\n      <ul>\r\n        <li>칼로리: {result.calories}kcal</li>\r\n        <li>탄수화물: {nutrients.carbohydrate}g</li>\r\n        <li>단백질: {nutrients.protein}g</li>\r\n        <li>지방: {nutrients.fat}g</li>\r\n        <li>당류: {nutrients.sugar}g</li>\r\n        <li>나트륨: {nutrients.sodium}mg</li>\r\n        <li>콜레스테롤: {nutrients.cholesterol}mg</li>\r\n        <li>포화지방: {nutrients.saturatedFat}g</li>\r\n        <li>트랜스지방: {nutrients.transFat}g</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReResult;\r\n","function Help() {\r\n  return null;\r\n}\r\n\r\nexport default Help;\r\n","import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport Home from \"./routes/Home\";\r\nimport Nutrients from \"./routes/Nutrients/Nutrients\";\r\nimport NuResult from \"./routes/Nutrients/NuResult\";\r\nimport Expiration from \"./routes/Expiration/Expiration\";\r\nimport ExResult from \"./routes/Expiration/ExResult\";\r\nimport Restaurant from \"./routes/Restaurant/Restaurant\";\r\nimport ReResult from \"./routes/Restaurant/ReResult\";\r\nimport Help from \"./routes/Help\";\r\n\r\nfunction App() {\r\n  //<Route path={`${process.env.PUBLIC_URL}/`} element={<Home />} />\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route path=\"/nutrients/result\" element={<NuResult />} />\r\n        <Route path=\"/nutrients\" element={<Nutrients />} />\r\n        <Route path=\"/expiration/result\" element={<ExResult />} />\r\n        <Route path=\"/expiration\" element={<Expiration />} />\r\n        <Route path=\"/restaurant\" element={<Restaurant />} />\r\n        <Route path=\"/restaurant/result\" element={<ReResult />} />\r\n        <Route path=\"/help\" element={<Help />} />\r\n        <Route path={`${process.env.PUBLIC_URL}/`} element={<Home />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport App from \"./App\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(<App />);\r\n"],"sourceRoot":""}