{"version":3,"sources":["components/Global/stylesheets/Video.module.css","components/Global/stylesheets/Canvas.module.css","components/Global/Button.js","routes/Home.js","js/tts.js","components/Global/Video.js","components/Global/Canvas.js","routes/Nutrients/Nutrients.js","routes/Nutrients/NuResult.js","routes/Expiration/Expiration.js","routes/Expiration/ExResult.js","js/stt.js","routes/Restaurant/Restaurant.js","routes/Restaurant/ReResult.js","routes/Help.js","App.js","index.js"],"names":["module","exports","Button","_ref","text","onClick","_jsx","children","Home","navigate","useNavigate","navigateTo","path","console","log","_jsxs","audio","Audio","canAudioPause","isAudioEnded","textToSpeech","_x","_textToSpeech","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","notImportant","audioData","otherparam","fetchData","res","_args","wrap","_context","prev","next","length","undefined","input","voice","languageCode","name","ssmlGender","audioConfig","audioEncoding","headers","body","JSON","stringify","method","addEventListener","fetch","sent","json","pause","src","concat","audioContent","play","t0","abrupt","Promise","resolve","loop","setInterval","clearInterval","stop","getDevice","ua","navigator","userAgent","toLowerCase","indexOf","Video","videoRef","useEffect","device","mediaDevices","getUserMedia","video","width","height","facingMode","exact","getWebcam","then","stream","current","srcObject","ref","className","styles","autoPlay","Canvas","forwardRef","props","canvas","Nutrients","_useState","useState","_useState2","_slicedToArray","productNum","setProductNum","_useState3","_useState4","isNumDetected","setIsNumDetected","_useState5","_useState6","resultArr","setResultArr","isFirstLoaded","useRef","search","canvasRef","getProductName","url","response","I1250","total_count","row","PRDLST_NM","I1310","Error","getNutrients","_ref2","_callee2","productName","newName","calories","carbohydrate","protein","fat","sugar","sodium","cholesterol","saturatedFat","transFat","result","nutrients","key","_context2","replaceAll","I2790","NUTR_CONT1","NUTR_CONT2","NUTR_CONT3","NUTR_CONT4","NUTR_CONT5","NUTR_CONT6","NUTR_CONT7","NUTR_CONT8","NUTR_CONT9","_x2","window","speechSynthesis","getVoices","id","ctx","getContext","drawImage","err","drawToCanvas","image","toDataURL","replace","formData","FormData","append","data","_toConsumableArray","sendImage","_getMode","arr","obj","forEach","resNum","repeatCnt","getMode","state","resNutrients","catch","NuResult","useLocation","nuts","Expiration","expiration","setExpiration","isDateDetected","setIsDateDetected","resDate","ExResult","resText","setResText","location","ttsText","sttResult","isSttFinished","speechToText","_speechToText","_callee3","interval","b64AudioToString","recorder","_args3","_context3","audioBase64","results","config","encoding","audio_channel_count","content","alternatives","transcript","MediaRecorder","event","reader","FileReader","readAsDataURL","onloadend","base64String","start","setTimeout","Restaurant","userRestaurant","userMenu","setNutrients","candidate","DESC_KOR","maker","MAKER_NAME","fetchNutrients","selectProduct","_ref3","isCorrectRes","_iterator","_step","nutrientsData","_createForOfIteratorHelper","s","n","done","value","e","f","finish","init","_ref4","_callee4","_context4","speakNutrients","_ref5","_callee5","_context5","ReResult","Help","App","Router","Routes","Route","element","process","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.e1eab46e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"video\":\"Video_video__1byDN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"Canvas_canvas__3J25t\"};","import PropTypes from \"prop-types\";\r\n\r\nfunction Button({ text, onClick }) {\r\n  return <button onClick={onClick}>{text}</button>;\r\n}\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import { useNavigate } from \"react-router-dom\";\r\nimport Button from \"../components/Global/Button\";\r\n//import { getSpeech } from \"../js/tts\";\r\nimport { useEffect } from \"react\";\r\n\r\nfunction Home() {\r\n  const navigate = useNavigate();\r\n  const navigateTo = (path) => {\r\n    navigate(path);\r\n    console.log(\"Redirecting...\");\r\n  };\r\n\r\n  //useEffect(() => getSpeech(\"Hello!\"), []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>앱 이름</h1>\r\n      <Button text=\"영양성분\" onClick={() => navigateTo(\"/nutrients\")} />\r\n      <Button text=\"유통기한\" onClick={() => navigateTo(\"/expiration\")} />\r\n      <Button text=\"음식점\" onClick={() => navigateTo(\"/restaurant\")} />\r\n      <Button text=\"도움말\" onClick={() => navigateTo(\"/help\")} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","function getSpeech(text) {\r\n  const lang = \"ko-KR\";\r\n  const utterThis = new SpeechSynthesisUtterance(text);\r\n\r\n  utterThis.lang = lang;\r\n  utterThis.rate = getSpeed();\r\n  window.speechSynthesis.speak(utterThis);\r\n}\r\n\r\nconst audio = new Audio();\r\nlet canAudioPause = false;\r\nlet isAudioEnded = false;\r\n\r\nasync function textToSpeech(text, notImportant = false) {\r\n  const url =\r\n    \"https://texttospeech.googleapis.com/v1/text:synthesize?key=AIzaSyCxnSFvcQd6a17xfB4nDwDafJH_juHSNA0\";\r\n  const audioData = {\r\n    input: {\r\n      text: text,\r\n    },\r\n    voice: {\r\n      languageCode: \"ko-KR\",\r\n      name: \"ko-KR-Neural2-c\",\r\n      ssmlGender: \"MALE\",\r\n    },\r\n    audioConfig: {\r\n      audioEncoding: \"MP3\",\r\n    },\r\n  };\r\n  const otherparam = {\r\n    headers: {\r\n      \"content-type\": \"application/json; charset=UTF-8\",\r\n    },\r\n    body: JSON.stringify(audioData),\r\n    method: \"POST\",\r\n  };\r\n\r\n  audio.addEventListener(\"ended\", () => {\r\n    console.log(\"audio ended!\");\r\n    isAudioEnded = true;\r\n  });\r\n\r\n  // 사운드 생성\r\n  try {\r\n    const fetchData = await fetch(url, otherparam);\r\n    const res = await fetchData.json();\r\n    console.log(canAudioPause);\r\n\r\n    if (canAudioPause) audio.pause();\r\n    audio.src = `data:audio/mp3;base64,${res.audioContent}`;\r\n    canAudioPause = notImportant;\r\n    audio.play();\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n\r\n  return new Promise((resolve) => {\r\n    let loop = setInterval(() => {\r\n      if (isAudioEnded) {\r\n        clearInterval(loop);\r\n        isAudioEnded = false;\r\n        resolve();\r\n      }\r\n    }, 100);\r\n  });\r\n}\r\n\r\nfunction stopSpeech() {\r\n  window.speechSynthesis.cancel();\r\n}\r\n\r\nfunction getDevice() {\r\n  let ua = navigator.userAgent.toLowerCase();\r\n  if (ua.indexOf(\"android\") > -1) {\r\n    return \"android\";\r\n  } else if (\r\n    ua.indexOf(\"iphone\") > -1 ||\r\n    ua.indexOf(\"ipad\") > -1 ||\r\n    ua.indexOf(\"ipod\") > -1\r\n  ) {\r\n    return \"ios\";\r\n  } else {\r\n    return \"computer\";\r\n  }\r\n}\r\n\r\nfunction getSpeed() {\r\n  let device = getDevice();\r\n  if (device === \"ios\") return 1.2;\r\n  else if (device === \"android\") return 1.5;\r\n  else return 2;\r\n}\r\n\r\nexport { getSpeech, stopSpeech, getDevice, textToSpeech };\r\n","import { useEffect } from \"react\";\r\nimport { getDevice } from \"../../js/tts\";\r\nimport styles from \"./stylesheets/Video.module.css\";\r\n\r\nfunction Video({ videoRef }) {\r\n  const getWebcam = () => {\r\n    const device = getDevice();\r\n    if (device === \"android\" || device === \"ios\") {\r\n      return navigator.mediaDevices.getUserMedia({\r\n        video: {\r\n          width: 300,\r\n          height: 400,\r\n          facingMode: { exact: \"environment\" },\r\n        },\r\n        audio: false,\r\n      });\r\n    } else {\r\n      return navigator.mediaDevices.getUserMedia({\r\n        video: {\r\n          width: 300,\r\n          height: 400,\r\n        },\r\n        audio: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getWebcam().then((stream) => {\r\n      videoRef.current.srcObject = stream;\r\n    });\r\n  }, []);\r\n\r\n  return <video ref={videoRef} className={styles.video} autoPlay />;\r\n}\r\n\r\nexport default Video;\r\n","import { forwardRef } from \"react\";\r\nimport styles from \"./stylesheets/Canvas.module.css\";\r\n\r\nconst Canvas = forwardRef((props, ref) => {\r\n  return (\r\n    <canvas\r\n      ref={ref}\r\n      className={styles.canvas}\r\n      width=\"720\"\r\n      height=\"960\"\r\n    ></canvas>\r\n  );\r\n});\r\n\r\nexport default Canvas;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { textToSpeech } from \"./../../js/tts\";\r\nimport Video from \"../../components/Global/Video\";\r\nimport Canvas from \"../../components/Global/Canvas\";\r\n\r\nfunction Nutrients() {\r\n  const [productNum, setProductNum] = useState(\"\");\r\n  const [isNumDetected, setIsNumDetected] = useState(false);\r\n  const [resultArr, setResultArr] = useState([]);\r\n\r\n  const isFirstLoaded = useRef(true);\r\n  const search = useRef(true);\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  const navigate = useNavigate();\r\n  const navigateTo = (path, params) => {\r\n    navigate(path, { state: params });\r\n    console.log(\"Redirecting...\");\r\n  };\r\n\r\n  const drawToCanvas = () => {\r\n    try {\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n      if (ctx !== null && videoRef.current) {\r\n        ctx.drawImage(videoRef.current, 0, 0, 300, 400);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const sendImage = () => {\r\n    try {\r\n      if (canvasRef.current) {\r\n        const image = canvasRef.current\r\n          .toDataURL()\r\n          .replace(\"data:image/png;base64,\", \"\");\r\n        let formData = new FormData();\r\n        formData.append(\"imageInfo\", image);\r\n\r\n        fetch(\"https://0917ba2.pythonanywhere.com/pummok\", {\r\n          method: \"POST\",\r\n          body: formData,\r\n        })\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            //console.log(data.result);\r\n            if (data.result !== \"not found\" && !isNumDetected) {\r\n              setIsNumDetected(true);\r\n            }\r\n            setResultArr((current) => [...current, data.result]);\r\n          });\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n\r\n    //console.log(image);\r\n  };\r\n\r\n  const getProductName = async (productNum) => {\r\n    //try: 일반 식품\r\n    let url = `http://openapi.foodsafetykorea.go.kr/api/8afc960ac75f4a4e9426/I1250/json/1/1/PRDLST_REPORT_NO=${productNum}`;\r\n    let response = await fetch(url);\r\n    let json = await response.json();\r\n    if (json.I1250.total_count !== \"0\") {\r\n      console.log(json);\r\n      return json.I1250.row[0].PRDLST_NM;\r\n    }\r\n    console.log(\"not found first\");\r\n\r\n    //try: 축산물\r\n    url = `http://openapi.foodsafetykorea.go.kr/api/8afc960ac75f4a4e9426/I1310/json/1/1/PRDLST_REPORT_NO=${productNum}`;\r\n    response = await fetch(url);\r\n    json = await response.json();\r\n    if (json.I1310.total_count !== \"0\") {\r\n      console.log(json);\r\n      return json.I1310.row[0].PRDLST_NM;\r\n    }\r\n\r\n    //not found\r\n    throw new Error(\"productNumber not found\");\r\n  };\r\n\r\n  const getNutrients = async (productName) => {\r\n    //space to underbar\r\n    const newName = productName.replaceAll(\" \", \"_\");\r\n\r\n    //fetch nutrients by productName\r\n    const url = `https://openapi.foodsafetykorea.go.kr/api/8afc960ac75f4a4e9426/I2790/json/1/1/DESC_KOR=${newName}`;\r\n    const response = await fetch(url);\r\n    const json = await response.json();\r\n\r\n    //throw Error\r\n    if (json.I2790.total_count === \"0\") {\r\n      throw new Error(\"품목보고번호에 일치하는 제품이 없습니다.\");\r\n    }\r\n\r\n    console.log(json);\r\n\r\n    //set nutrients\r\n    const calories = json.I2790.row[0].NUTR_CONT1;\r\n    const carbohydrate = json.I2790.row[0].NUTR_CONT2;\r\n    const protein = json.I2790.row[0].NUTR_CONT3;\r\n    const fat = json.I2790.row[0].NUTR_CONT4;\r\n    const sugar = json.I2790.row[0].NUTR_CONT5;\r\n    const sodium = json.I2790.row[0].NUTR_CONT6;\r\n    const cholesterol = json.I2790.row[0].NUTR_CONT7;\r\n    const saturatedFat = json.I2790.row[0].NUTR_CONT8;\r\n    const transFat = json.I2790.row[0].NUTR_CONT9;\r\n\r\n    //output Object\r\n    const result = {};\r\n    const nutrients = {\r\n      name: productName,\r\n      calories: calories,\r\n      nutrients: {\r\n        carbohydrate: carbohydrate,\r\n        protein: protein,\r\n        fat: fat,\r\n        sugar: sugar,\r\n        sodium: sodium,\r\n        cholesterol: cholesterol,\r\n        saturatedFat: saturatedFat,\r\n        transFat: transFat,\r\n      },\r\n    };\r\n\r\n    //set zero default value\r\n    for (let key in nutrients.nutrients) {\r\n      if (nutrients.nutrients[key] === \"\") {\r\n        nutrients.nutrients[key] = \"0\";\r\n      }\r\n    }\r\n\r\n    result[\"nuts\"] = nutrients;\r\n    //console.log(result);\r\n    return result;\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.speechSynthesis.getVoices();\r\n    textToSpeech(\"품목보고번호 탐색을 시작합니다.\", true);\r\n    const id = setInterval(() => {\r\n      if (search.current) {\r\n        drawToCanvas();\r\n        sendImage();\r\n      }\r\n    }, 250);\r\n    return () => clearInterval(id);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isNumDetected) {\r\n      console.log(\"number detected!\");\r\n      textToSpeech(\"품목보고번호가 감지되었습니다.\", false);\r\n    }\r\n  }, [isNumDetected]);\r\n\r\n  useEffect(() => {\r\n    if (resultArr.length >= 10) {\r\n      search.current = false;\r\n      let { res, repeatCnt } = getMode(resultArr);\r\n      if (res === \"not found\") {\r\n        console.log(\"failed.. begin to search\");\r\n        textToSpeech(\"탐색중.\", true);\r\n        search.current = true;\r\n      } else {\r\n        console.log(\"success!\");\r\n        console.log(`found result is ${res}`);\r\n        setProductNum(res);\r\n      }\r\n      //init\r\n      setIsNumDetected(false);\r\n      setResultArr([]);\r\n    }\r\n  }, [resultArr]);\r\n\r\n  useEffect(() => {\r\n    //console.log(isFirstLoaded.current);\r\n    if (!isFirstLoaded.current && productNum !== \"\") {\r\n      getProductName(productNum)\r\n        .then((productName) => getNutrients(productName))\r\n        .then((nutrients) => {\r\n          console.log(nutrients);\r\n          setProductNum(\"\");\r\n          navigateTo(\"/nutrients/result\", { resNutrients: nutrients });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          console.log(\"product not found. begin to search.\");\r\n          textToSpeech(\"일치하는 상품이 없습니다. 재탐색합니다.\", false);\r\n          search.current = true;\r\n        });\r\n    } else {\r\n      isFirstLoaded.current = false;\r\n    }\r\n  }, [productNum]);\r\n\r\n  return (\r\n    <div>\r\n      <Video videoRef={videoRef} />\r\n      <Canvas ref={canvasRef} />\r\n    </div>\r\n  );\r\n}\r\n\r\n//get mode value of Array: arr\r\nfunction getMode(arr) {\r\n  let obj = {};\r\n  arr.forEach((res) => {\r\n    obj[res] = obj[res] === undefined ? 1 : obj[res] + 1;\r\n  });\r\n  //console.log(obj);\r\n  let res = \"\";\r\n  let resNum = 0;\r\n  for (let key in obj) {\r\n    //console.log(key);\r\n    if (resNum < obj[key]) {\r\n      res = key;\r\n      resNum = obj[key];\r\n    }\r\n  }\r\n  return { res: res, repeatCnt: resNum };\r\n}\r\n\r\nexport default Nutrients;\r\n","import { useLocation } from \"react-router-dom\";\r\nimport { textToSpeech } from \"./../../js/tts\";\r\nimport { useEffect } from \"react\";\r\n\r\nfunction NuResult() {\r\n  const location = useLocation();\r\n  const result = location.state.resNutrients.nuts;\r\n  const nutrients = result.nutrients;\r\n\r\n  useEffect(() => {\r\n    textToSpeech(\"찾았습니다.\");\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>상품명: {result.name}</h1>\r\n      <ul>\r\n        <li>칼로리: {result.calories}kcal</li>\r\n        <li>탄수화물: {nutrients.carbohydrate}g</li>\r\n        <li>단백질: {nutrients.protein}g</li>\r\n        <li>지방: {nutrients.fat}g</li>\r\n        <li>당류: {nutrients.sugar}g</li>\r\n        <li>나트륨: {nutrients.sodium}mg</li>\r\n        <li>콜레스테롤: {nutrients.cholesterol}mg</li>\r\n        <li>포화지방: {nutrients.saturatedFat}g</li>\r\n        <li>트랜스지방: {nutrients.transFat}g</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NuResult;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { textToSpeech } from \"../../js/tts\";\r\nimport Video from \"../../components/Global/Video\";\r\nimport Canvas from \"../../components/Global/Canvas\";\r\n\r\nfunction Expiration() {\r\n  const [expiration, setExpiration] = useState(\"\");\r\n  const [isDateDetected, setIsDateDetected] = useState(false);\r\n  const [resultArr, setResultArr] = useState([]);\r\n\r\n  const isFirstLoaded = useRef(true);\r\n  const search = useRef(true);\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  const navigate = useNavigate();\r\n  const navigateTo = (path, params) => {\r\n    navigate(path, { state: params });\r\n    console.log(\"Redirecting...\");\r\n  };\r\n\r\n  const drawToCanvas = () => {\r\n    try {\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n      if (ctx !== null && videoRef.current) {\r\n        ctx.drawImage(videoRef.current, 0, 0, 300, 400);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const sendImage = () => {\r\n    try {\r\n      if (canvasRef.current) {\r\n        const image = canvasRef.current\r\n          .toDataURL()\r\n          .replace(\"data:image/png;base64,\", \"\");\r\n        let formData = new FormData();\r\n        formData.append(\"imageInfo\", image);\r\n\r\n        fetch(\"https://0917ba2.pythonanywhere.com/utong\", {\r\n          method: \"POST\",\r\n          body: formData,\r\n        })\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            //console.log(data.result);\r\n            if (data.result !== \"not found\" && !isDateDetected) {\r\n              setIsDateDetected(true);\r\n            }\r\n            setResultArr((current) => [...current, data.result]);\r\n          });\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n\r\n    //console.log(image);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.speechSynthesis.getVoices();\r\n    //getSpeech(\"유통기한 탐색을 시작합니다.\");\r\n    textToSpeech(\"유통기한 탐색을 시작합니다.\", true);\r\n    const id = setInterval(() => {\r\n      drawToCanvas();\r\n      sendImage();\r\n    }, 250);\r\n    return () => clearInterval(id);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isDateDetected) {\r\n      console.log(\"date detected!\");\r\n      textToSpeech(\"유통기한이 감지되었습니다.\", false);\r\n    }\r\n  }, [isDateDetected]);\r\n\r\n  useEffect(() => {\r\n    if (resultArr.length >= 10) {\r\n      search.current = false;\r\n      let { res, repeatCnt } = getMode(resultArr);\r\n      if (res === \"not found\") {\r\n        console.log(\"failed.. begin to search\");\r\n        textToSpeech(\"탐색중.\", true);\r\n        //getSpeech(\"유통기한을 찾지 못했습니다. 재검색합니다.\");\r\n        search.current = true;\r\n      } else {\r\n        console.log(\"success!\");\r\n        console.log(`found result is ${res}`);\r\n        setExpiration(res);\r\n      }\r\n\r\n      //init\r\n      setIsDateDetected(false);\r\n      setResultArr([]);\r\n    }\r\n  }, [resultArr]);\r\n\r\n  useEffect(() => {\r\n    //console.log(isFirstLoaded.current);\r\n    if (!isFirstLoaded.current && expiration !== \"\") {\r\n      console.log(`Expiration Date is ${expiration}`);\r\n      navigateTo(\"/expiration/result\", { resDate: expiration });\r\n    } else {\r\n      isFirstLoaded.current = false;\r\n    }\r\n  }, [expiration]);\r\n\r\n  return (\r\n    <div>\r\n      <Video videoRef={videoRef} />\r\n      <Canvas ref={canvasRef} />\r\n    </div>\r\n  );\r\n}\r\n\r\n//get mode value of Array: arr\r\nfunction getMode(arr) {\r\n  let obj = {};\r\n  arr.forEach((res) => {\r\n    obj[res] = obj[res] === undefined ? 1 : obj[res] + 1;\r\n  });\r\n  console.log(obj);\r\n  let res = \"\";\r\n  let resNum = 0;\r\n  for (let key in obj) {\r\n    //console.log(key);\r\n    if (resNum < obj[key]) {\r\n      res = key;\r\n      resNum = obj[key];\r\n    }\r\n  }\r\n  return { res: res, repeatCnt: resNum };\r\n}\r\n\r\nexport default Expiration;\r\n","import { useLocation } from \"react-router-dom\";\r\nimport { textToSpeech } from \"./../../js/tts\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction ExResult() {\r\n  const [resText, setResText] = useState(\"\");\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    let resDate = location.state.resDate;\r\n    resDate = resDate.replace(\"-\", \"년 \");\r\n    resDate = resDate.replace(\"-\", \"월 \");\r\n    resDate += \"일\";\r\n    console.log(resDate);\r\n    const ttsText = `상품의 유통기한은 ${resDate} 입니다.`;\r\n    setResText(ttsText);\r\n    textToSpeech(ttsText, false);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>{resText}</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExResult;\r\n","//final return value\r\nlet sttResult = \"\";\r\nlet isSttFinished = false;\r\n\r\nasync function speechToText(interval = 3000) {\r\n  //audioBase64: plain b64 string\r\n  const b64AudioToString = async (audioBase64) => {\r\n    const url =\r\n      \"https://speech.googleapis.com/v1/speech:recognize?key=AIzaSyCxnSFvcQd6a17xfB4nDwDafJH_juHSNA0\";\r\n\r\n    // POST data\r\n    const data = {\r\n      config: {\r\n        encoding: \"WEBM_OPUS\",\r\n        languageCode: \"ko-KR\",\r\n        audio_channel_count: 1,\r\n      },\r\n      audio: {\r\n        content: audioBase64,\r\n      },\r\n    };\r\n\r\n    // POST request\r\n    const response = await fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    const results = await response.json();\r\n\r\n    //return text\r\n    try {\r\n      return results.results[0].alternatives[0].transcript;\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  // input stream\r\n  const stream = await navigator.mediaDevices.getUserMedia({\r\n    audio: true,\r\n    video: false,\r\n  });\r\n\r\n  //input recorder\r\n  const recorder = new MediaRecorder(stream);\r\n\r\n  recorder.addEventListener(\"dataavailable\", (event) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(event.data);\r\n    reader.onloadend = async () => {\r\n      const base64String = reader.result.replace(\r\n        \"data:audio/webm;codecs=opus;base64,\",\r\n        \"\"\r\n      );\r\n      sttResult = await b64AudioToString(base64String);\r\n      isSttFinished = true;\r\n    };\r\n  });\r\n\r\n  //start & stop recording\r\n  return new Promise((resolve) => {\r\n    console.log(\"recording start!\");\r\n    recorder.start();\r\n    setTimeout(() => {\r\n      recorder.stop();\r\n      console.log(\"recording stop!\");\r\n      let loop = setInterval(() => {\r\n        if (isSttFinished) {\r\n          clearInterval(loop);\r\n          isSttFinished = false;\r\n          resolve(sttResult);\r\n        }\r\n      }, 100);\r\n    }, interval);\r\n  });\r\n}\r\n\r\nexport { speechToText };\r\n","import { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { textToSpeech } from \"./../../js/tts\";\r\nimport { speechToText } from \"../../js/stt\";\r\n\r\nfunction Restaurant() {\r\n  const navigate = useNavigate();\r\n  const navigateTo = (path, params) => {\r\n    navigate(path, { state: params });\r\n    console.log(\"Redirecting...\");\r\n  };\r\n\r\n  let userRestaurant = \"\";\r\n  let userMenu = \"\";\r\n\r\n  const divOnClick = () => {};\r\n\r\n  const setNutrients = (candidate) => {\r\n    if (candidate !== \"\") {\r\n      //set nutrients\r\n      const calories = candidate.NUTR_CONT1;\r\n      const carbohydrate = candidate.NUTR_CONT2;\r\n      const protein = candidate.NUTR_CONT3;\r\n      const fat = candidate.NUTR_CONT4;\r\n      const sugar = candidate.NUTR_CONT5;\r\n      const sodium = candidate.NUTR_CONT6;\r\n      const cholesterol = candidate.NUTR_CONT7;\r\n      const saturatedFat = candidate.NUTR_CONT8;\r\n      const transFat = candidate.NUTR_CONT9;\r\n\r\n      //output Object\r\n      const result = {};\r\n      const nutrients = {\r\n        name: candidate.DESC_KOR,\r\n        maker: candidate.MAKER_NAME,\r\n        calories: calories,\r\n        nutrients: {\r\n          carbohydrate: carbohydrate,\r\n          protein: protein,\r\n          fat: fat,\r\n          sugar: sugar,\r\n          sodium: sodium,\r\n          cholesterol: cholesterol,\r\n          saturatedFat: saturatedFat,\r\n          transFat: transFat,\r\n        },\r\n      };\r\n\r\n      //set zero default value\r\n      for (let key in nutrients.nutrients) {\r\n        if (nutrients.nutrients[key] === \"\") {\r\n          nutrients.nutrients[key] = \"0\";\r\n        }\r\n      }\r\n\r\n      //return\r\n      result[\"nuts\"] = nutrients;\r\n      console.log(result);\r\n      return result;\r\n    }\r\n  };\r\n\r\n  const getNutrients = async () => {\r\n    const fetchNutrients = async () => {\r\n      const url = `https://openapi.foodsafetykorea.go.kr/api/8afc960ac75f4a4e9426/I2790/json/1/100/DESC_KOR=${userMenu}&MAKER_NAME=${userRestaurant}`;\r\n      const response = await fetch(url);\r\n      const json = await response.json();\r\n\r\n      if (json.I2790.total_count === \"0\") {\r\n        throw new Error(\"일치하는 제품이 없습니다.\");\r\n      }\r\n\r\n      //console.log(json);\r\n      return json;\r\n    };\r\n\r\n    const selectProduct = async () => {\r\n      let isCorrectRes = false;\r\n      let nutrients = null;\r\n\r\n      for (const nutrientsData of json.I2790.row) {\r\n        console.log(`찾으시는 제품이 ${nutrientsData.DESC_KOR} 인가요?`);\r\n        await textToSpeech(`찾으시는 제품이 ${nutrientsData.DESC_KOR} 인가요?`);\r\n\r\n        const userResponse = await speechToText(2500);\r\n        if (userResponse === \"네\") {\r\n          nutrients = setNutrients(nutrientsData);\r\n          console.log(nutrients);\r\n          isCorrectRes = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (isCorrectRes) {\r\n        navigateTo(\"/restaurant/result\", { resNutrients: nutrients });\r\n      } else {\r\n        await textToSpeech(\"찾으시는 제품이 없습니다...ㅠㅠ\");\r\n        console.log(\"찾으시는 제품이 없습니다...ㅠㅠ\");\r\n      }\r\n    };\r\n\r\n    const json = await fetchNutrients();\r\n    selectProduct();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      console.log(\"I'm started!\");\r\n      await textToSpeech(\"방문하신 매장의 이름을 말씀해주세요.\");\r\n      userRestaurant = await speechToText(3000);\r\n      await textToSpeech(\"주문하실 메뉴의 이름을 말씀해주세요.\");\r\n      userMenu = await speechToText(3000);\r\n      console.log(userRestaurant, userMenu);\r\n    };\r\n\r\n    const speakNutrients = async () => {\r\n      await init();\r\n      console.log(\"init end!\");\r\n      getNutrients();\r\n    };\r\n\r\n    speakNutrients();\r\n  }, []);\r\n\r\n  return <div></div>;\r\n}\r\n\r\nexport default Restaurant;\r\n","import { useLocation } from \"react-router-dom\";\r\nimport { textToSpeech } from \"./../../js/tts\";\r\nimport { useEffect } from \"react\";\r\n\r\nfunction ReResult() {\r\n  const location = useLocation();\r\n  const result = location.state.resNutrients.nuts;\r\n  const nutrients = result.nutrients;\r\n\r\n  useEffect(() => {\r\n    textToSpeech(\"찾았습니다.\");\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>상품명: {result.name}</h1>\r\n      <ul>\r\n        <li>칼로리: {result.calories}kcal</li>\r\n        <li>탄수화물: {nutrients.carbohydrate}g</li>\r\n        <li>단백질: {nutrients.protein}g</li>\r\n        <li>지방: {nutrients.fat}g</li>\r\n        <li>당류: {nutrients.sugar}g</li>\r\n        <li>나트륨: {nutrients.sodium}mg</li>\r\n        <li>콜레스테롤: {nutrients.cholesterol}mg</li>\r\n        <li>포화지방: {nutrients.saturatedFat}g</li>\r\n        <li>트랜스지방: {nutrients.transFat}g</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReResult;\r\n","function Help() {\r\n  return null;\r\n}\r\n\r\nexport default Help;\r\n","import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport Home from \"./routes/Home\";\r\nimport Nutrients from \"./routes/Nutrients/Nutrients\";\r\nimport NuResult from \"./routes/Nutrients/NuResult\";\r\nimport Expiration from \"./routes/Expiration/Expiration\";\r\nimport ExResult from \"./routes/Expiration/ExResult\";\r\nimport Restaurant from \"./routes/Restaurant/Restaurant\";\r\nimport ReResult from \"./routes/Restaurant/ReResult\";\r\nimport Help from \"./routes/Help\";\r\n\r\nfunction App() {\r\n  //<Route path={`${process.env.PUBLIC_URL}/`} element={<Home />} />\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route path=\"/nutrients/result\" element={<NuResult />} />\r\n        <Route path=\"/nutrients\" element={<Nutrients />} />\r\n        <Route path=\"/expiration/result\" element={<ExResult />} />\r\n        <Route path=\"/expiration\" element={<Expiration />} />\r\n        <Route path=\"/restaurant\" element={<Restaurant />} />\r\n        <Route path=\"/restaurant/result\" element={<ReResult />} />\r\n        <Route path=\"/help\" element={<Help />} />\r\n        <Route path={`${process.env.PUBLIC_URL}/`} element={<Home />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport App from \"./App\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(<App />);\r\n"],"sourceRoot":""}