{"version":3,"sources":["routes/Home.module.css","routes/Help/Help.module.css","components/Global/stylesheets/Video.module.css","components/Global/stylesheets/Canvas.module.css","js/tts.js","js/stt.js","js/sttHandle.js","components/Global/Button.js","components/Global/ImgButton.js","routes/logo.jpg","routes/Home.js","js/nutrientsHandle.js","components/Global/Video.js","components/Global/Canvas.js","routes/Nutrients/Nutrients.js","js/readNutrients.js","routes/Nutrients/NuResult.js","routes/Expiration/Expiration.js","routes/Expiration/ExResult.js","routes/Restaurant/Restaurant.js","routes/Restaurant/ReResult.js","routes/Help/Help.js","App.js","index.js"],"names":["module","exports","audio","Audio","muted","nowImportant","textToSpeech","_x","_textToSpeech","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","text","isImportant","url","audioData","otherparam","currSource4","_args","wrap","_context","prev","next","length","undefined","input","voice","languageCode","name","ssmlGender","audioConfig","audioEncoding","headers","body","JSON","stringify","method","src","substring","addEventListener","fetch","then","fetchData","json","res","concat","audioContent","console","log","play","once","pause","err","abrupt","Promise","resolve","stop","stopTTS","load","getDevice","ua","navigator","userAgent","toLowerCase","indexOf","speechToText","_speechToText","_callee3","interval","sttResult","b64AudioToString","stream","recorder","_args3","_context3","_ref","audioBase64","data","response","results","config","encoding","audio_channel_count","content","sent","alternatives","transcript","t0","mediaDevices","getUserMedia","video","MediaRecorder","start","setTimeout","event","reader","FileReader","readAsDataURL","onloadend","_callee2","base64String","_context2","result","replace","restaurantsList","Set","positiveResponse","Button","onClick","classname","_jsx","className","children","ImgButton","Home","navigate","useNavigate","navigateTo","path","useEffect","init","_ref2","_callee4","getButton","_context4","_ref3","res1","getNutrientsWhere","_ref4","res2","_useState","useState","_useState2","_slicedToArray","_jsxs","styles","settingimg","onclick","aboutlogo","Logo","width","divbtnone","myButton","divbtntwo","setNutrients","candidate","calories","NUTR_CONT1","carbohydrate","NUTR_CONT2","protein","NUTR_CONT3","fat","NUTR_CONT4","sugar","NUTR_CONT5","sodium","NUTR_CONT6","cholesterol","NUTR_CONT7","saturatedFat","NUTR_CONT8","transFat","NUTR_CONT9","nutrients","DESC_KOR","maker","MAKER_NAME","key","Video","videoRef","device","height","facingMode","exact","getWebcam","current","srcObject","ref","autoPlay","Canvas","forwardRef","props","canvas","Nutrients","productNum","setProductNum","_useState3","_useState4","isNumDetected","setIsNumDetected","_useState5","_useState6","resultArr","setResultArr","isFirstLoaded","useRef","search","canvasRef","getProductName","I1250","total_count","row","PRDLST_NM","I1310","Error","getNutrients","productName","newName","replaceAll","I2790","_x2","window","speechSynthesis","getVoices","id","setInterval","ctx","getContext","drawImage","drawToCanvas","image","toDataURL","formData","FormData","append","_toConsumableArray","sendImage","clearInterval","_getMode","arr","obj","forEach","resNum","repeatCnt","getMode","state","resNutrients","catch","readNutreintsObject","_readNutreintsObject","element","NuResult","useLocation","nuts","readNutrients","userRes","has","isFirst","Expiration","expiration","setExpiration","isDateDetected","setIsDateDetected","intervalId","dateDetected","cycleEnded","resDate","ExResult","resText","setResText","location","speakDate","ttsText","setDate","Restaurant","params","displayText","setDisplayText","userRestaurant","userMenu","fetchNutrients","selectProduct","rawNutrients","isCorrectRes","_iterator","_step","nutrientsData","userResponse","_createForOfIteratorHelper","s","n","done","value","e","f","finish","ReResult","Help","center","prettytext","App","Router","Routes","Route","process","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.38ae4322.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"aboutlogo\":\"Home_aboutlogo__1t4GY\",\"myButton\":\"Home_myButton__u9PxD\",\"divbtnone\":\"Home_divbtnone__KR7pg\",\"divbtntwo\":\"Home_divbtntwo__3PgLr\",\"settingimg\":\"Home_settingimg__2MVPE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"Help_center__2twLA\",\"prettytext\":\"Help_prettytext__35Sfe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"video\":\"Video_video__1byDN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"Canvas_canvas__3J25t\"};","const audio = new Audio();\r\naudio.muted = true;\r\nlet nowImportant = true;\r\n\r\n//isImportant = true: 말을 끊지 않는다. false: 말을 끊는다.\r\nasync function textToSpeech(text, isImportant = true) {\r\n  const url =\r\n    \"https://texttospeech.googleapis.com/v1/text:synthesize?key=AIzaSyCxnSFvcQd6a17xfB4nDwDafJH_juHSNA0\";\r\n  const audioData = {\r\n    input: {\r\n      text: text,\r\n    },\r\n    voice: {\r\n      languageCode: \"ko-KR\",\r\n      name: \"ko-KR-Neural2-c\",\r\n      ssmlGender: \"MALE\",\r\n    },\r\n    audioConfig: {\r\n      audioEncoding: \"MP3\",\r\n    },\r\n  };\r\n  const otherparam = {\r\n    headers: {\r\n      \"content-type\": \"application/json; charset=UTF-8\",\r\n    },\r\n    body: JSON.stringify(audioData),\r\n    method: \"POST\",\r\n  };\r\n  // 사운드 생성\r\n  try {\r\n    const currSource4 = audio.src.substring(0, 4);\r\n    if (nowImportant && currSource4 !== \"http\" && currSource4 !== \"\") {\r\n      //현재 재생되는 오디오가 중요할 때\r\n      audio.addEventListener(\r\n        \"ended\",\r\n        () => {\r\n          fetch(url, otherparam)\r\n            .then((fetchData) => fetchData.json())\r\n            .then((res) => {\r\n              audio.src = `data:audio/mp3;base64,${res.audioContent}`;\r\n              console.log(\"tts start!\");\r\n              audio.muted = true;\r\n              audio.play();\r\n            });\r\n        },\r\n        { once: true }\r\n      );\r\n    } else {\r\n      //현재 재생되는 오디오가 중요하지 않을때 또는 오디오가 없을때\r\n      fetch(url, otherparam)\r\n        .then((fetchData) => fetchData.json())\r\n        .then((res) => {\r\n          audio.pause();\r\n          audio.src = `data:audio/mp3;base64,${res.audioContent}`;\r\n          console.log(\"tts start!\");\r\n          audio.muted = true;\r\n          audio.play();\r\n          //audio.muted = false;\r\n          //console.log(\"play!\");\r\n          //console.log(\"curr\", audio.src);\r\n        });\r\n    }\r\n    nowImportant = isImportant;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n\r\n  return new Promise((resolve) => {\r\n    audio.addEventListener(\r\n      \"ended\",\r\n      () => {\r\n        console.log(\"tts end!\");\r\n        audio.src = \"\";\r\n        //console.log(\"now is\", audio.src);\r\n        resolve();\r\n      },\r\n      { once: true }\r\n    );\r\n  });\r\n}\r\n\r\nfunction stopTTS() {\r\n  audio.pause();\r\n  console.log(\"stop..\");\r\n  audio.src = \"\";\r\n  audio.load();\r\n}\r\n\r\nfunction getDevice() {\r\n  let ua = navigator.userAgent.toLowerCase();\r\n  if (ua.indexOf(\"android\") > -1) {\r\n    return \"android\";\r\n  } else if (\r\n    ua.indexOf(\"iphone\") > -1 ||\r\n    ua.indexOf(\"ipad\") > -1 ||\r\n    ua.indexOf(\"ipod\") > -1\r\n  ) {\r\n    return \"ios\";\r\n  } else {\r\n    return \"computer\";\r\n  }\r\n}\r\n\r\nfunction getSpeed() {\r\n  let device = getDevice();\r\n  if (device === \"ios\") return 1.2;\r\n  else if (device === \"android\") return 1.5;\r\n  else return 2;\r\n}\r\n\r\nexport { getSpeed, getDevice, textToSpeech, stopTTS };\r\n","async function speechToText(interval = 3000) {\r\n  //final return value\r\n  let sttResult = \"\";\r\n\r\n  //audioBase64: plain b64 string\r\n  const b64AudioToString = async (audioBase64) => {\r\n    const url =\r\n      \"https://speech.googleapis.com/v1/speech:recognize?key=AIzaSyCxnSFvcQd6a17xfB4nDwDafJH_juHSNA0\";\r\n\r\n    // POST data\r\n    const data = {\r\n      config: {\r\n        encoding: \"WEBM_OPUS\",\r\n        languageCode: \"ko-KR\",\r\n        audio_channel_count: 1,\r\n      },\r\n      audio: {\r\n        content: audioBase64,\r\n      },\r\n    };\r\n\r\n    // POST request\r\n    const response = await fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    const results = await response.json();\r\n\r\n    //return text\r\n    try {\r\n      return results.results[0].alternatives[0].transcript;\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  // input stream\r\n  const stream = await navigator.mediaDevices.getUserMedia({\r\n    audio: true,\r\n    video: false,\r\n  });\r\n\r\n  //input recorder\r\n  const recorder = new MediaRecorder(stream);\r\n\r\n  //start & stop recording\r\n  return new Promise((resolve) => {\r\n    console.log(\"recording start!\");\r\n    recorder.start();\r\n\r\n    setTimeout(() => {\r\n      recorder.stop();\r\n      console.log(\"recording stop!\");\r\n    }, interval);\r\n\r\n    recorder.addEventListener(\r\n      \"dataavailable\",\r\n      (event) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(event.data);\r\n\r\n        reader.onloadend = async () => {\r\n          const base64String = reader.result.replace(\r\n            \"data:audio/webm;codecs=opus;base64,\",\r\n            \"\"\r\n          );\r\n          sttResult = await b64AudioToString(base64String);\r\n          console.log(sttResult);\r\n          resolve(sttResult);\r\n        };\r\n      },\r\n      { once: true }\r\n    );\r\n  });\r\n}\r\n\r\nexport { speechToText };\r\n","const restaurantsList = new Set([\r\n  \"도미노피자\",\r\n  \"피자헛\",\r\n  \"미스터피자\",\r\n  \"피자에땅\",\r\n  \"피자알볼로\",\r\n  \"알볼로\",\r\n  \"뽕뜨락피자\",\r\n  \"카페띠아모\",\r\n  \"못난이꽈배기\",\r\n  \"코코호도\",\r\n  \"크리스피크림도넛\",\r\n  \"크리스피크림\",\r\n  \"요거프레소\",\r\n  \"카페베네\",\r\n  \"탐앤탐스\",\r\n  \"커피마마\",\r\n  \"투썸플레이스\",\r\n  \"파스쿠찌\",\r\n  \"7번가피자\",\r\n  \"칠번가피자\",\r\n  \"파파존스\",\r\n  \"롯데리아\",\r\n  \"토프레소\",\r\n  \"배스킨라빈스\",\r\n  \"피자스쿨\",\r\n  \"공차\",\r\n  \"스타벅스\",\r\n  \"앤티앤스프레즐\",\r\n  \"앤티앤스\",\r\n  \"카페 봄봄\",\r\n  \"이디야커피\",\r\n  \"이디야\",\r\n  \"목우촌참피자\",\r\n  \"난타5000\",\r\n  \"난타오천\",\r\n  \"반올림피자샵\",\r\n  \"반올림피자\",\r\n  \"빽다방\",\r\n  \"백다방\",\r\n  \"백따방\",\r\n  \"빽따방\",\r\n  \"커피빈\",\r\n  \"앤젤리너스\",\r\n  \"앤젤리너스커피\",\r\n  \"드롭탑\",\r\n  \"드롭탑커피\",\r\n  \"할리스커피\",\r\n  \"할리스\",\r\n  \"커피베이\",\r\n  \"XOXO핫도그&커피\",\r\n  \"파리바게뜨\",\r\n  \"파리바게트\",\r\n  \"피자마루\",\r\n  \"오구피자\",\r\n  \"서브웨이\",\r\n  \"맥도날드\",\r\n  \"버거킹\",\r\n  \"맘스터치\",\r\n  \"KFC\",\r\n  \"피자나라치킨공주\",\r\n  \"던킨도너츠\",\r\n  \"뚜레쥬르\",\r\n  \"메가커피\",\r\n  \"커피에 반하다\",\r\n  \"삼삼한밥상\",\r\n  \"고피자\",\r\n  \"피자헤븐\",\r\n  \"눈꽃치즈떡볶이\",\r\n  \"스트릿츄러스\",\r\n  \"꾸브라꼬 숯불두마리 치킨\",\r\n  \"꾸브라꼬\",\r\n  \"쿡솜씨\",\r\n  \"프레시지\",\r\n]);\r\n\r\nconst positiveResponse = new Set([\r\n  \"네\",\r\n  \"넵\",\r\n  \"옙\",\r\n  \"예\",\r\n  \"맞아요\",\r\n  \"맞습니다\",\r\n  \"맞아\",\r\n  \"그래\",\r\n  \"응\",\r\n  \"어\",\r\n  \"맞을걸요\",\r\n  \"맞음\",\r\n]);\r\n\r\nconst negativeResponse = new Set([\r\n  \"아니\",\r\n  \"아니요\",\r\n  \"아니오\",\r\n  \"아닙니다\",\r\n  \"아닐걸요\",\r\n  \"아닌데\",\r\n  \"아님\",\r\n  \"아니에요\",\r\n  \"아냐\",\r\n  \"아니야\",\r\n  \"아뇨\",\r\n  \"아녀\",\r\n]);\r\n\r\nexport { restaurantsList, positiveResponse, negativeResponse };\r\n","import PropTypes from \"prop-types\";\r\n\r\nfunction Button({ text, onClick, classname }) {\r\n  return (\r\n    <button onClick={onClick} className={classname}>\r\n      {text}\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","function ImgButton({ onClick, classname }) {\r\n  return <button onClick={onClick} className={classname}></button>;\r\n}\r\n\r\nexport default ImgButton;\r\n","export default __webpack_public_path__ + \"static/media/logo.27187399.jpg\";","import { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { textToSpeech } from \"../js/tts\";\r\nimport { speechToText } from \"../js/stt\";\r\nimport { positiveResponse } from \"../js/sttHandle\";\r\nimport Button from \"../components/Global/Button\";\r\nimport ImgButton from \"../components/Global/ImgButton\";\r\nimport Logo from \"./logo.jpg\";\r\nimport styles from \"./Home.module.css\";\r\n\r\nfunction Home() {\r\n  const navigate = useNavigate();\r\n  const navigateTo = (path) => {\r\n    navigate(path);\r\n    console.log(\"Redirecting...\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const selectButton = async () => {\r\n      await textToSpeech(\"버튼 선택좀 ㅋ\");\r\n    };\r\n\r\n    const init = async () => {\r\n      await textToSpeech(\r\n        \"영양성분, 유통기한, 도움말 중 원하시는 기능을 말씀해주세요.\"\r\n      );\r\n      const getButton = async () => {\r\n        const res1 = await speechToText(3000);\r\n        switch (res1) {\r\n          case \"영양 성분\":\r\n          case \"영양성분\":\r\n            await textToSpeech(\r\n              \"가공식품의 영양성분을 알고 싶으시다면 '가공식품', 음식점 메뉴의 영양성분을 알고 싶으시다면 '음식점'을 말씀해주세요.\"\r\n            );\r\n            const getNutrientsWhere = async () => {\r\n              const res2 = await speechToText(3000);\r\n              if (res2 === \"가공식품\" || res2 === \"가공 식품\") {\r\n                await textToSpeech(\r\n                  \"가공식품 영양정보 찾기 화면으로 이동합니다.\"\r\n                );\r\n                navigateTo(\"/nutrients\");\r\n              } else if (res2 === \"음식점\") {\r\n                await textToSpeech(\r\n                  \"음식점 메뉴 영양정보 찾기 화면으로 이동합니다.\"\r\n                );\r\n                navigateTo(\"/restaurant\");\r\n              } else {\r\n                await textToSpeech(\"다시 한 번 말씀해 주시겠어요?\");\r\n                getNutrientsWhere();\r\n              }\r\n            };\r\n            getNutrientsWhere();\r\n            break;\r\n\r\n          case \"유통기한\":\r\n            await textToSpeech(\"유통기한 찾기 화면으로 이동합니다.\");\r\n            navigateTo(\"/expiration\");\r\n            break;\r\n\r\n          case \"도움말\":\r\n            await textToSpeech(\"도움말 화면으로 이동합니다.\");\r\n            navigateTo(\"/help\");\r\n            break;\r\n\r\n          default:\r\n            await textToSpeech(\"다시 한 번 말씀해 주시겠어요?\");\r\n            getButton();\r\n            break;\r\n        }\r\n      };\r\n      getButton();\r\n    };\r\n    init();\r\n  }, []);\r\n  let [modal, setModal] = useState(false);\r\n  return (\r\n    <div>\r\n      <div>\r\n        <ImgButton\r\n          classname={styles.settingimg}\r\n          onclick={() => navigateTo(\"/Settings\")}\r\n        />\r\n      </div>\r\n      <div className={styles.aboutlogo}>\r\n        <img src={Logo} width={300}></img>\r\n      </div>\r\n      <div>\r\n        <div className={styles.divbtnone}>\r\n          <Button\r\n            classname={styles.myButton}\r\n            text=\"영양성분\"\r\n            onClick={() => navigateTo(\"/nutrients\")}\r\n          />\r\n\r\n          <Button\r\n            classname={styles.myButton}\r\n            text=\"유통기한\"\r\n            onClick={() => navigateTo(\"/expiration\")}\r\n          />\r\n        </div>\r\n        <div className={styles.divbtntwo}>\r\n          <Button\r\n            classname={styles.myButton}\r\n            text=\"음식점\"\r\n            onClick={() => navigateTo(\"/restaurant\")}\r\n          />\r\n\r\n          <Button\r\n            classname={styles.myButton}\r\n            text=\"도움말\"\r\n            onClick={() => navigateTo(\"/help\")}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","/**\r\n *  function that returns sanitized nutrients data\r\n *  @param {object} candidate json.I2790.row[i]\r\n *  @return object{nuts: {name, maker, calories, nutrients}}\r\n */\r\nfunction setNutrients(candidate) {\r\n  if (candidate !== \"\") {\r\n    //set nutrients\r\n    const calories = candidate.NUTR_CONT1;\r\n    const carbohydrate = candidate.NUTR_CONT2;\r\n    const protein = candidate.NUTR_CONT3;\r\n    const fat = candidate.NUTR_CONT4;\r\n    const sugar = candidate.NUTR_CONT5;\r\n    const sodium = candidate.NUTR_CONT6;\r\n    const cholesterol = candidate.NUTR_CONT7;\r\n    const saturatedFat = candidate.NUTR_CONT8;\r\n    const transFat = candidate.NUTR_CONT9;\r\n\r\n    //output Object\r\n    const result = {};\r\n    const nutrients = {\r\n      name: candidate.DESC_KOR,\r\n      maker: candidate.MAKER_NAME,\r\n      calories: calories,\r\n      nutrients: {\r\n        carbohydrate: carbohydrate,\r\n        protein: protein,\r\n        fat: fat,\r\n        sugar: sugar,\r\n        sodium: sodium,\r\n        cholesterol: cholesterol,\r\n        saturatedFat: saturatedFat,\r\n        transFat: transFat,\r\n      },\r\n    };\r\n\r\n    //set zero default value\r\n    for (let key in nutrients.nutrients) {\r\n      if (nutrients.nutrients[key] === \"\") {\r\n        nutrients.nutrients[key] = \"0\";\r\n      }\r\n    }\r\n\r\n    //return\r\n    result[\"nuts\"] = nutrients;\r\n    return result;\r\n  }\r\n}\r\n\r\nfunction readNutrients(result) {}\r\n\r\nexport { setNutrients };\r\n","import { useEffect } from \"react\";\r\nimport { getDevice } from \"../../js/tts\";\r\nimport styles from \"./stylesheets/Video.module.css\";\r\n\r\nfunction Video({ videoRef }) {\r\n  const getWebcam = () => {\r\n    const device = getDevice();\r\n    if (device === \"android\" || device === \"ios\") {\r\n      return navigator.mediaDevices.getUserMedia({\r\n        video: {\r\n          width: 300,\r\n          height: 400,\r\n          facingMode: { exact: \"environment\" },\r\n        },\r\n        audio: false,\r\n      });\r\n    } else {\r\n      return navigator.mediaDevices.getUserMedia({\r\n        video: {\r\n          width: 300,\r\n          height: 400,\r\n        },\r\n        audio: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getWebcam().then((stream) => {\r\n      videoRef.current.srcObject = stream;\r\n    });\r\n  }, []);\r\n\r\n  return <video ref={videoRef} className={styles.video} autoPlay />;\r\n}\r\n\r\nexport default Video;\r\n","import { forwardRef } from \"react\";\r\nimport styles from \"./stylesheets/Canvas.module.css\";\r\n\r\nconst Canvas = forwardRef((props, ref) => {\r\n  return (\r\n    <canvas\r\n      ref={ref}\r\n      className={styles.canvas}\r\n      width=\"720\"\r\n      height=\"960\"\r\n    ></canvas>\r\n  );\r\n});\r\n\r\nexport default Canvas;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { stopTTS, textToSpeech } from \"./../../js/tts\";\r\nimport { setNutrients } from \"../../js/nutrientsHandle\";\r\nimport Video from \"../../components/Global/Video\";\r\nimport Canvas from \"../../components/Global/Canvas\";\r\n\r\nfunction Nutrients() {\r\n  const [productNum, setProductNum] = useState(\"\");\r\n  const [isNumDetected, setIsNumDetected] = useState(false);\r\n  const [resultArr, setResultArr] = useState([]);\r\n\r\n  const isFirstLoaded = useRef(true);\r\n  const search = useRef(true);\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  const navigate = useNavigate();\r\n  const navigateTo = (path, params) => {\r\n    navigate(path, { state: params });\r\n    console.log(\"Redirecting...\");\r\n  };\r\n\r\n  const drawToCanvas = () => {\r\n    try {\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n      if (ctx !== null && videoRef.current) {\r\n        ctx.drawImage(videoRef.current, 0, 0, 300, 400);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const sendImage = () => {\r\n    try {\r\n      if (canvasRef.current) {\r\n        const image = canvasRef.current\r\n          .toDataURL()\r\n          .replace(\"data:image/png;base64,\", \"\");\r\n        let formData = new FormData();\r\n        formData.append(\"imageInfo\", image);\r\n\r\n        fetch(\"https://0917ba2.pythonanywhere.com/pummok\", {\r\n          method: \"POST\",\r\n          body: formData,\r\n        })\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            //console.log(data.result);\r\n            if (data.result !== \"not found\" && !isNumDetected) {\r\n              setIsNumDetected(true);\r\n            }\r\n            setResultArr((current) => [...current, data.result]);\r\n          });\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n\r\n    //console.log(image);\r\n  };\r\n\r\n  const getProductName = async (productNum) => {\r\n    //try: 일반 식품\r\n    let url = `http://openapi.foodsafetykorea.go.kr/api/8afc960ac75f4a4e9426/I1250/json/1/1/PRDLST_REPORT_NO=${productNum}`;\r\n    let response = await fetch(url);\r\n    let json = await response.json();\r\n    if (json.I1250.total_count !== \"0\") {\r\n      console.log(json);\r\n      return json.I1250.row[0].PRDLST_NM;\r\n    }\r\n    console.log(\"not found first\");\r\n\r\n    //try: 축산물\r\n    url = `http://openapi.foodsafetykorea.go.kr/api/8afc960ac75f4a4e9426/I1310/json/1/1/PRDLST_REPORT_NO=${productNum}`;\r\n    response = await fetch(url);\r\n    json = await response.json();\r\n    if (json.I1310.total_count !== \"0\") {\r\n      console.log(json);\r\n      return json.I1310.row[0].PRDLST_NM;\r\n    }\r\n\r\n    //not found\r\n    throw new Error(\"productNumber not found\");\r\n  };\r\n\r\n  const getNutrients = async (productName) => {\r\n    //space to underbar\r\n    const newName = productName.replaceAll(\" \", \"_\");\r\n\r\n    //fetch nutrients by productName\r\n    const url = `https://openapi.foodsafetykorea.go.kr/api/8afc960ac75f4a4e9426/I2790/json/1/1/DESC_KOR=${newName}`;\r\n    const response = await fetch(url);\r\n    const json = await response.json();\r\n\r\n    //throw Error\r\n    if (json.I2790.total_count === \"0\") {\r\n      throw new Error(\"품목보고번호에 일치하는 제품이 없습니다.\");\r\n    }\r\n\r\n    console.log(json);\r\n    return setNutrients(json.I2790.row[0]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.speechSynthesis.getVoices();\r\n    textToSpeech(\"품목보고번호 탐색을 시작합니다.\", true);\r\n    const id = setInterval(() => {\r\n      if (search.current) {\r\n        drawToCanvas();\r\n        sendImage();\r\n      }\r\n    }, 350);\r\n    return () => {\r\n      clearInterval(id);\r\n      stopTTS();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isNumDetected) {\r\n      console.log(\"number detected!\");\r\n      textToSpeech(\"품목보고번호가 감지되었습니다.\", true);\r\n    }\r\n  }, [isNumDetected]);\r\n\r\n  useEffect(() => {\r\n    if (resultArr.length >= 10) {\r\n      search.current = false;\r\n      let { res, repeatCnt } = getMode(resultArr);\r\n      if (res === \"not found\") {\r\n        console.log(\"failed.. begin to search\");\r\n        textToSpeech(\"탐색중.\", false);\r\n        search.current = true;\r\n      } else {\r\n        console.log(\"success!\");\r\n        console.log(`found result is ${res}`);\r\n        setProductNum(res);\r\n      }\r\n      //init\r\n      setIsNumDetected(false);\r\n      setResultArr([]);\r\n    }\r\n  }, [resultArr]);\r\n\r\n  useEffect(() => {\r\n    //console.log(isFirstLoaded.current);\r\n    if (!isFirstLoaded.current && productNum !== \"\") {\r\n      getProductName(productNum)\r\n        .then((productName) => getNutrients(productName))\r\n        .then((nutrients) => {\r\n          console.log(nutrients);\r\n          setProductNum(\"\");\r\n          navigateTo(\"/nutrients/result\", { resNutrients: nutrients });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          console.log(\"product not found. begin to search.\");\r\n          textToSpeech(\"일치하는 상품이 없습니다. 재탐색합니다.\", true);\r\n          setProductNum(\"\");\r\n          search.current = true;\r\n        });\r\n    } else {\r\n      isFirstLoaded.current = false;\r\n    }\r\n  }, [productNum]);\r\n\r\n  return (\r\n    <div>\r\n      <Video videoRef={videoRef} />\r\n      <Canvas ref={canvasRef} />\r\n    </div>\r\n  );\r\n}\r\n\r\n//get mode value of Array: arr\r\nfunction getMode(arr) {\r\n  let obj = {};\r\n  arr.forEach((res) => {\r\n    obj[res] = obj[res] === undefined ? 1 : obj[res] + 1;\r\n  });\r\n  //console.log(obj);\r\n  let res = \"\";\r\n  let resNum = 0;\r\n  for (let key in obj) {\r\n    //console.log(key);\r\n    if (resNum < obj[key]) {\r\n      res = key;\r\n      resNum = obj[key];\r\n    }\r\n  }\r\n  return { res: res, repeatCnt: resNum };\r\n}\r\n\r\nexport default Nutrients;\r\n","import { textToSpeech } from \"./tts\";\r\n\r\nasync function readNutreintsObject(element) {\r\n  const name = element.name;\r\n  const calories = element.calories;\r\n  const carbohydrate = element.nutrients.carbohydrate;\r\n  const protein = element.nutrients.protein;\r\n  const fat = element.nutrients.fat;\r\n  const sugar = element.nutrients.sugar;\r\n  const sodium = element.nutrients.sodium;\r\n  const cholesterol = element.nutrients.cholesterol;\r\n  const saturatedFat = element.nutrients.saturatedFat;\r\n  const transFat = element.nutrients.transFat;\r\n  await textToSpeech(\"상품명 \" + name);\r\n  await textToSpeech(\"칼로리 \" + calories + \"칼로리\");\r\n  await textToSpeech(\"탄수화물 \" + carbohydrate + \"그램\");\r\n  await textToSpeech(\"단백질 \" + protein + \"그램\");\r\n  await textToSpeech(\"지방 \" + fat + \"그램\");\r\n  await textToSpeech(\"당류 \" + sugar + \"그램\");\r\n  await textToSpeech(\"나트륨 \" + sodium + \"밀리그램\");\r\n  await textToSpeech(\"콜레스테롤 \" + cholesterol + \"밀리그램\");\r\n  await textToSpeech(\"포화지방 \" + saturatedFat + \"그램\");\r\n  await textToSpeech(\"트랜스지방 \" + transFat + \"그램\");\r\n}\r\n\r\nexport { readNutreintsObject };\r\n","import { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { textToSpeech } from \"./../../js/tts\";\r\nimport { speechToText } from \"../../js/stt\";\r\nimport { useEffect } from \"react\";\r\nimport { positiveResponse } from \"../../js/sttHandle\";\r\nimport { readNutreintsObject } from \"../../js/readNutrients\";\r\n\r\nfunction NuResult() {\r\n  const navigate = useNavigate();\r\n  const navigateTo = (path, params) => {\r\n    navigate(path, { state: params });\r\n    console.log(\"Redirecting...\");\r\n  };\r\n\r\n  const location = useLocation();\r\n  const result = location.state.resNutrients.nuts;\r\n  const nutrients = result.nutrients;\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      await textToSpeech(\"제품을 찾았습니다.\");\r\n      readNutrients();\r\n    };\r\n\r\n    const readNutrients = async () => {\r\n      await readNutreintsObject(result);\r\n      await textToSpeech(\"다시 들려드릴까요?\", true);\r\n      const userRes = await speechToText(3000);\r\n      if (positiveResponse.has(userRes)) {\r\n        readNutrients();\r\n      } else {\r\n        await textToSpeech(\"첫 화면으로 이동합니다.\", true);\r\n        navigateTo(\"/2023-ISHS-JRH\", { isFirst: false });\r\n      }\r\n    };\r\n\r\n    init();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>상품명: {result.name}</h1>\r\n      <ul>\r\n        <li>칼로리: {result.calories}kcal</li>\r\n        <li>탄수화물: {nutrients.carbohydrate}g</li>\r\n        <li>단백질: {nutrients.protein}g</li>\r\n        <li>지방: {nutrients.fat}g</li>\r\n        <li>당류: {nutrients.sugar}g</li>\r\n        <li>나트륨: {nutrients.sodium}mg</li>\r\n        <li>콜레스테롤: {nutrients.cholesterol}mg</li>\r\n        <li>포화지방: {nutrients.saturatedFat}g</li>\r\n        <li>트랜스지방: {nutrients.transFat}g</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NuResult;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { textToSpeech, stopTTS } from \"../../js/tts\";\r\nimport Video from \"../../components/Global/Video\";\r\nimport Canvas from \"../../components/Global/Canvas\";\r\n\r\nfunction Expiration() {\r\n  const [expiration, setExpiration] = useState(\"\");\r\n  const [isDateDetected, setIsDateDetected] = useState(false);\r\n  const [resultArr, setResultArr] = useState([]);\r\n\r\n  const isFirstLoaded = useRef(true);\r\n  const search = useRef(true);\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  const navigate = useNavigate();\r\n  const navigateTo = (path, params) => {\r\n    navigate(path, { state: params });\r\n    console.log(\"Redirecting...\");\r\n  };\r\n\r\n  const drawToCanvas = () => {\r\n    try {\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n      if (ctx !== null && videoRef.current) {\r\n        ctx.drawImage(videoRef.current, 0, 0, 300, 400);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const sendImage = () => {\r\n    try {\r\n      if (canvasRef.current) {\r\n        const image = canvasRef.current\r\n          .toDataURL()\r\n          .replace(\"data:image/png;base64,\", \"\");\r\n        let formData = new FormData();\r\n        formData.append(\"imageInfo\", image);\r\n\r\n        fetch(\"https://0917ba2.pythonanywhere.com/utong\", {\r\n          method: \"POST\",\r\n          body: formData,\r\n        })\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            //console.log(data.result);\r\n            if (data.result !== \"not found\" && !isDateDetected) {\r\n              setIsDateDetected(true);\r\n            }\r\n            setResultArr((current) => [...current, data.result]);\r\n          });\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n\r\n    //console.log(image);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let intervalId = 0;\r\n    const init = async () => {\r\n      await textToSpeech(\"유통기한 탐색을 시작합니다.\", true);\r\n      const id = setInterval(() => {\r\n        if (intervalId === 0) intervalId = id;\r\n        //console.log(\"hahaha\");\r\n        drawToCanvas();\r\n        sendImage();\r\n      }, 250);\r\n    };\r\n\r\n    init();\r\n    return () => {\r\n      clearInterval(intervalId);\r\n      stopTTS();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const dateDetected = async () => {\r\n      if (isDateDetected) {\r\n        console.log(\"date detected!\");\r\n        await textToSpeech(\"유통기한이 감지되었습니다.\", true);\r\n      }\r\n    };\r\n\r\n    dateDetected();\r\n  }, [isDateDetected]);\r\n\r\n  useEffect(() => {\r\n    const cycleEnded = async () => {\r\n      const init = () => {\r\n        setIsDateDetected(false);\r\n        setResultArr([]);\r\n      };\r\n\r\n      if (resultArr.length >= 10) {\r\n        search.current = false;\r\n        let { res, repeatCnt } = getMode(resultArr);\r\n        if (res === \"not found\") {\r\n          console.log(\"failed.. begin to search\");\r\n          search.current = true;\r\n          init();\r\n          await textToSpeech(\"탐색중.\", false);\r\n        } else {\r\n          console.log(\"success!\");\r\n          console.log(`found result is ${res}`);\r\n          init();\r\n          setExpiration(res);\r\n        }\r\n      }\r\n    };\r\n\r\n    cycleEnded();\r\n  }, [resultArr]);\r\n\r\n  useEffect(() => {\r\n    //console.log(isFirstLoaded.current);\r\n    if (!isFirstLoaded.current && expiration !== \"\") {\r\n      console.log(`Expiration Date is ${expiration}`);\r\n      navigateTo(\"/expiration/result\", { resDate: expiration });\r\n    } else {\r\n      isFirstLoaded.current = false;\r\n    }\r\n  }, [expiration]);\r\n\r\n  return (\r\n    <div>\r\n      <Video videoRef={videoRef} />\r\n      <Canvas ref={canvasRef} />\r\n    </div>\r\n  );\r\n}\r\n\r\n//get mode value of Array: arr\r\nfunction getMode(arr) {\r\n  let obj = {};\r\n  arr.forEach((res) => {\r\n    obj[res] = obj[res] === undefined ? 1 : obj[res] + 1;\r\n  });\r\n  console.log(obj);\r\n  let res = \"\";\r\n  let resNum = 0;\r\n  for (let key in obj) {\r\n    //console.log(key);\r\n    if (resNum < obj[key]) {\r\n      res = key;\r\n      resNum = obj[key];\r\n    }\r\n  }\r\n  return { res: res, repeatCnt: resNum };\r\n}\r\n\r\nexport default Expiration;\r\n","import { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { textToSpeech } from \"./../../js/tts\";\r\nimport { speechToText } from \"../../js/stt\";\r\nimport { positiveResponse } from \"../../js/sttHandle\";\r\n\r\nfunction ExResult() {\r\n  const [resText, setResText] = useState(\"\");\r\n  const location = useLocation();\r\n\r\n  const navigate = useNavigate();\r\n  const navigateTo = (path, params) => {\r\n    navigate(path, { state: params });\r\n    console.log(\"Redirecting...\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const setDate = () => {\r\n      let resDate = location.state.resDate;\r\n      resDate = resDate.replace(\"-\", \"년 \");\r\n      resDate = resDate.replace(\"-\", \"월 \");\r\n      resDate += \"일\";\r\n      console.log(resDate);\r\n      return resDate;\r\n    };\r\n\r\n    const speakDate = async () => {\r\n      await textToSpeech(ttsText);\r\n      console.log(\"first\");\r\n      await textToSpeech(\"다시 들려드릴까요?\", true);\r\n      console.log(\"second\");\r\n      const userRes = await speechToText(3000);\r\n      if (positiveResponse.has(userRes)) {\r\n        speakDate();\r\n      } else {\r\n        await textToSpeech(\"첫 화면으로 이동합니다.\", true);\r\n        navigateTo(\"/2023-ISHS-JRH\", { isFirst: false });\r\n      }\r\n    };\r\n\r\n    const resDate = setDate();\r\n    const ttsText = `상품의 유통기한은 ${resDate} 입니다.`;\r\n    setResText(ttsText);\r\n\r\n    speakDate();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>{resText}</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExResult;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { textToSpeech, stopTTS } from \"../../js/tts\";\r\nimport { speechToText } from \"../../js/stt\";\r\nimport { setNutrients } from \"../../js/nutrientsHandle\";\r\nimport { restaurantsList, positiveResponse } from \"../../js/sttHandle\";\r\n\r\nfunction Restaurant() {\r\n  const navigate = useNavigate();\r\n  const navigateTo = (path, params) => {\r\n    navigate(path, { state: params });\r\n    console.log(\"Redirecting...\");\r\n  };\r\n\r\n  const [displayText, setDisplayText] = useState(\"\");\r\n\r\n  let userRestaurant = \"\";\r\n  let userMenu = \"\";\r\n\r\n  const getNutrients = async () => {\r\n    const fetchNutrients = async () => {\r\n      const url = `https://openapi.foodsafetykorea.go.kr/api/8afc960ac75f4a4e9426/I2790/json/1/100/DESC_KOR=${userMenu}&MAKER_NAME=${userRestaurant}`;\r\n      const response = await fetch(url);\r\n      const json = await response.json();\r\n\r\n      if (json.I2790.total_count === \"0\") {\r\n        setDisplayText(\"찾으시는 제품이 없습니다...\");\r\n        await textToSpeech(\"찾으시는 제품이 없습니다...\");\r\n        await textToSpeech(\"첫 화면으로 이동합니다.\");\r\n        return null;\r\n      } else {\r\n        return json;\r\n      }\r\n    };\r\n\r\n    const selectProduct = async () => {\r\n      let isCorrectRes = false;\r\n      let nutrients = null;\r\n      for (const nutrientsData of rawNutrients.I2790.row) {\r\n        setDisplayText(`찾으시는 메뉴가 ${nutrientsData.DESC_KOR} 인가요?`);\r\n        await textToSpeech(`찾으시는 메뉴가 ${nutrientsData.DESC_KOR} 인가요?`);\r\n\r\n        const userResponse = await speechToText(2500);\r\n        if (positiveResponse.has(userResponse)) {\r\n          nutrients = setNutrients(nutrientsData);\r\n          console.log(nutrients);\r\n          isCorrectRes = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (isCorrectRes) {\r\n        navigateTo(\"/restaurant/result\", { resNutrients: nutrients });\r\n      } else {\r\n        setDisplayText(\"찾으시는 메뉴가 존재하지 않습니다...\");\r\n        await textToSpeech(\"찾으시는 메뉴가 존재하지 않습니다...\");\r\n        await textToSpeech(\"첫 화면으로 이동합니다.\");\r\n        navigateTo(\"/2023-ISHS-JRH\");\r\n      }\r\n    };\r\n\r\n    const rawNutrients = await fetchNutrients();\r\n    if (rawNutrients !== null) selectProduct();\r\n    else navigateTo(\"/2023-ISHS-JRH\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      console.log(\"init started!\");\r\n\r\n      setDisplayText(\"방문하신 매장의 이름을 말씀해주세요.\");\r\n      await textToSpeech(\"방문하신 매장의 이름을 말씀해주세요.\");\r\n      userRestaurant = await speechToText(3000);\r\n\r\n      if (restaurantsList.has(userRestaurant)) {\r\n        setDisplayText(\"주문하실 메뉴의 이름을 말씀해주세요.\");\r\n        await textToSpeech(\"주문하실 메뉴의 이름을 말씀해주세요.\");\r\n        userMenu = await speechToText(3000);\r\n        getNutrients();\r\n      } else {\r\n        setDisplayText(\"찾으시는 매장이 존재하지 않습니다...\");\r\n        await textToSpeech(\"찾으시는 매장이 존재하지 않습니다...\");\r\n        await textToSpeech(\"첫 화면으로 이동합니다.\");\r\n        navigateTo(\"/2023-ISHS-JRH\");\r\n      }\r\n    };\r\n\r\n    init();\r\n    return () => stopTTS();\r\n  }, []);\r\n\r\n  return <div>{displayText}</div>;\r\n}\r\n\r\nexport default Restaurant;\r\n","import { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { textToSpeech } from \"./../../js/tts\";\r\nimport { speechToText } from \"../../js/stt\";\r\nimport { positiveResponse } from \"../../js/sttHandle\";\r\nimport { useEffect } from \"react\";\r\nimport { readNutreintsObject } from \"../../js/readNutrients\";\r\n\r\nfunction ReResult() {\r\n  const navigate = useNavigate();\r\n  const navigateTo = (path, params) => {\r\n    navigate(path, { state: params });\r\n    console.log(\"Redirecting...\");\r\n  };\r\n\r\n  const location = useLocation();\r\n  const result = location.state.resNutrients.nuts;\r\n  const nutrients = result.nutrients;\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      await textToSpeech(\"제품을 찾았습니다.\");\r\n      readNutrients();\r\n    };\r\n\r\n    const readNutrients = async () => {\r\n      await readNutreintsObject(result);\r\n      await textToSpeech(\"다시 들려드릴까요?\", true);\r\n      const userRes = await speechToText(3000);\r\n      if (positiveResponse.has(userRes)) {\r\n        readNutrients();\r\n      } else {\r\n        await textToSpeech(\"첫 화면으로 이동합니다.\", true);\r\n        navigateTo(\"/2023-ISHS-JRH\", { isFirst: false });\r\n      }\r\n    };\r\n\r\n    init();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>상품명: {result.name}</h1>\r\n      <ul>\r\n        <li>칼로리: {result.calories}kcal</li>\r\n        <li>탄수화물: {nutrients.carbohydrate}g</li>\r\n        <li>단백질: {nutrients.protein}g</li>\r\n        <li>지방: {nutrients.fat}g</li>\r\n        <li>당류: {nutrients.sugar}g</li>\r\n        <li>나트륨: {nutrients.sodium}mg</li>\r\n        <li>콜레스테롤: {nutrients.cholesterol}mg</li>\r\n        <li>포화지방: {nutrients.saturatedFat}g</li>\r\n        <li>트랜스지방: {nutrients.transFat}g</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReResult;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { textToSpeech } from \"../../js/tts\";\r\nimport styles from \"./Help.module.css\";\r\n\r\nfunction Help() {\r\n  const navigate = useNavigate();\r\n  const navigateTo = (path, params) => {\r\n    navigate(path, { state: params });\r\n    console.log(\"Redirecting...\");\r\n  };\r\n  return (\r\n    <div className={styles.center}>\r\n      <h1 className={styles.prettytext}> 도움말 </h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Help;\r\n","import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport Home from \"./routes/Home\";\r\nimport Nutrients from \"./routes/Nutrients/Nutrients\";\r\nimport NuResult from \"./routes/Nutrients/NuResult\";\r\nimport Expiration from \"./routes/Expiration/Expiration\";\r\nimport ExResult from \"./routes/Expiration/ExResult\";\r\nimport Restaurant from \"./routes/Restaurant/Restaurant\";\r\nimport ReResult from \"./routes/Restaurant/ReResult\";\r\nimport Help from \"./routes/Help/Help\";\r\n\r\nfunction App() {\r\n  //<Route path={`${process.env.PUBLIC_URL}/`} element={<Home />} />\r\n\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route path=\"/nutrients/result\" element={<NuResult />} />\r\n        <Route path=\"/nutrients\" element={<Nutrients />} />\r\n        <Route path=\"/expiration/result\" element={<ExResult />} />\r\n        <Route path=\"/expiration\" element={<Expiration />} />\r\n        <Route path=\"/restaurant\" element={<Restaurant />} />\r\n        <Route path=\"/restaurant/result\" element={<ReResult />} />\r\n        <Route path=\"/help\" element={<Help />} />\r\n        <Route path={`${process.env.PUBLIC_URL}/`} element={<Home />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport App from \"./App\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(<App />);\r\n"],"sourceRoot":""}